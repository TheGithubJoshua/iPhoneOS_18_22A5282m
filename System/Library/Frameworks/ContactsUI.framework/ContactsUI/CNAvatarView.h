@class UIView, NSString, UIImage, UINavigationController, NSArray, UIImageView, CNContact, CNAvatarCardController, CNContactStore, NSIndexSet;
@protocol CNSchedulerProvider, CNAvatarViewDelegate, CNAvatarViewUpdateToken, CNUILikenessRendering, CNCancelable;

@interface CNAvatarView : UIView <CNContactChangesObserver, CNAvatarCardControllerDelegate, CNUILikenessCachingRendererDelegate, CNCardTransitioning> {
    BOOL _showsActionsOnTap;
    BOOL _showsActionsOnForcePress;
}

@property (class, readonly, nonatomic) unsigned long long maxContactAvatars;

@property (nonatomic) BOOL showsActionsOnTap;
@property (nonatomic) BOOL showsActionsOnForcePress;
@property (retain, nonatomic) CNContact *contact;
@property (retain, nonatomic) id<CNCancelable> rendererToken;
@property (copy, nonatomic) UIImageView *imageView;
@property (retain, nonatomic) NSIndexSet *maskedAvatarIndices;
@property (nonatomic) BOOL shouldUpdateMaskedAvatars;
@property (nonatomic) long long displayedImageState;
@property (retain, nonatomic) UINavigationController *contactViewNavigationController;
@property (retain, nonatomic) CNAvatarCardController *cardController;
@property (nonatomic) unsigned long long stateCaptureHandle;
@property (retain, nonatomic) id<CNAvatarViewUpdateToken> groupViewConfigurationUpdateToken;
@property (nonatomic) BOOL allowStaleRenderingWithMatchingContextToken;
@property BOOL registeredInNotifier;
@property BOOL registeredContactAction;
@property (retain, nonatomic) UIImage *overrideImage;
@property (nonatomic) BOOL disableCornerRadiusForAvatar;
@property (retain, nonatomic) id<CNUILikenessRendering> imageRenderer;
@property (retain, nonatomic) id<CNSchedulerProvider> schedulerProvider;
@property (nonatomic) long long monogrammerStyle;
@property (readonly, nonatomic) UIImage *contentImage;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentImageFrame;
@property (nonatomic) BOOL autoUpdateContact;
@property (nonatomic) BOOL asynchronousRendering;
@property (nonatomic) BOOL bypassActionValidation;
@property (nonatomic) BOOL allowStaleRendering;
@property (retain, nonatomic) NSString *contextToken;
@property (readonly, nonatomic) BOOL isDisplayingContent;
@property (nonatomic) BOOL allowsAnimation;
@property (nonatomic) BOOL prohibitsPersonaFetch;
@property (nonatomic) unsigned long long style;
@property (readonly, nonatomic) CNContactStore *contactStore;
@property (nonatomic, getter=isThreeDTouchEnabled) BOOL threeDTouchEnabled;
@property (retain, nonatomic) NSArray *contacts;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *message;
@property (weak, nonatomic) id<CNAvatarViewDelegate> delegate;
@property (nonatomic) BOOL showsContactOnTap;
@property (copy, nonatomic) NSArray *actionCategories;
@property (weak, nonatomic) UIView *forcePressView;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) UIView *transitioningView;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } transitioningFrame;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } transitioningContentFrame;
@property (readonly, nonatomic) UIImage *transitioningImage;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } transitioningImageFrame;
@property BOOL transitioningImageVisible;
@property (readonly, nonatomic) UIView *transitioningContentView;

+ (id)descriptorForRequiredKeys;
+ (BOOL)defaultThreeDTouchSupport;
+ (id)descriptionForDisplayedImageState:(long long)a0;
+ (id)descriptorForRequiredKeysWithThreeDTouchEnabled:(BOOL)a0;
+ (id)descriptorForRequiredKeysWithThreeDTouchEnabled:(BOOL)a0 shouldUseCachingRenderer:(BOOL)a1 description:(id)a2;
+ (id)makeDescriptorForRequiredKeysWithThreeDTouchEnabled:(BOOL)a0 shouldUseCachingRenderer:(BOOL)a1;

- (id)initWithCoder:(id)a0;
- (id)initWithContact:(id)a0;
- (void)avatarCardControllerWillBeginPreviewInteraction:(id)a0;
- (id)initWithSettings:(id)a0;
- (id)initWithImageRenderer:(id)a0 threeDTouchEnabled:(BOOL)a1 contactStore:(id)a2;
- (id)init;
- (double)_diameter;
- (id)initWithImageRenderer:(id)a0 threeDTouchEnabled:(BOOL)a1 contactStore:(id)a2 style:(unsigned long long)a3 schedulerProvider:(id)a4;
- (void)avatarCardControllerWillDismiss:(id)a0;
- (long long)avatarCardController:(id)a0 presentationResultForLocation:(struct CGPoint { double x0; double x1; })a1;
- (void)avatarCacheDidUpdateForIdentifiers:(id)a0;
- (void)setImage:(id)a0 state:(long long)a1;
- (id)presentingViewControllerForAvatarCardController:(id)a0;
- (id)avatarCardController:(id)a0 orderedPropertiesForProperties:(id)a1 category:(id)a2;
- (BOOL)shouldUpdateWithContacts:(id)a0;
- (BOOL)enabled;
- (void)_updateRegistration;
- (void)contactDidChange;
- (void)_renderContactsImage;
- (void)dismissContactViewController:(id)a0;
- (void)_updateCardActions;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)isUpdatingGroupViewConfiguration;
- (id)imageForTransitioningToFullScreen;
- (void)setContacts:(id)a0 forToken:(id)a1;
- (void)setupAvatarCardControllerIfNeeded;
- (BOOL)avatarCardController:(id)a0 shouldShowContact:(id)a1;
- (void)showContact:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForAvatarAtIndex:(unsigned long long)a0 inView:(id)a1;
- (void)avatarCardControllerDidDismiss:(id)a0;
- (id)descriptorForRequiredKeys;
- (id)currentLikenessScope;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)traitCollectionDidChange:(id)a0;
- (void)notifyDelegateOfGroupConfigurationUpdateWithError:(id)a0;
- (void)_setContacts:(id)a0;
- (id)updateViewWithGroupIdentity:(id)a0 maskingContacts:(id)a1;
- (id)updateViewWithGroupIdentity:(id)a0;
- (void)resetGroupUpdateTokenIfNeeded;
- (void)clearImage;
- (void)contactDidChange:(id)a0;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (void)setEnabled:(BOOL)a0;
- (void)dealloc;
- (void)layoutSubviews;

@end
