@class NSURL, UIImageView, NSDate, PXImageLayerModulator, CALayer, UIColor, PUBrowsingViewModel, NSString, PUImageRequester, PUAssetViewModel, PUMediaProvider, NSData, PXImageModulationManager, UIImage;
@protocol PXVKImageAnalysisInteraction, PUDisplayAsset, PLTileableLayer, PUImageTileViewControllerPresentingDelegate;

@interface PUImageTileViewController : PUTileViewController <PUImageRequesterObserver, PUBrowsingViewModelChangeObserver, PXVKImageAnalysisInteractionDelegate, PUAssetViewModelChangeObserver> {
    struct { BOOL respondsToPresentingViewController; BOOL respondsToShouldShowVisualIntelligenceOverlay; } _delegateFlags;
}

@property (readonly, nonatomic) BOOL imageIsFullQuality;
@property (nonatomic, setter=_setNeedsUpdateImage:) BOOL _needsUpdateImage;
@property (nonatomic, setter=_setNeedsUpdateImageLayerModulator:) BOOL _needsUpdateImageLayerModulator;
@property (nonatomic, setter=_setNeedsUpdateImageLayerModulatorInput:) BOOL _needsUpdateImageLayerModulatorInput;
@property (nonatomic, setter=_setNeedsUpdateImageView:) BOOL _needsUpdateImageView;
@property (nonatomic, setter=_setNeedsUpdateFullsizeImageMetadata:) BOOL _needsUpdateFullsizeImageMetadata;
@property (nonatomic, setter=_setNeedsUpdateFullsizeTiledLayer:) BOOL _needsUpdateFullsizeTiledLayer;
@property (nonatomic, setter=_setTargetSize:) struct CGSize { double width; double height; } _targetSize;
@property (nonatomic) BOOL needsUpdateTargetSize;
@property (nonatomic) BOOL needsUpdateVisualIntelligenceOverlayContentsRect;
@property (readonly, nonatomic) UIImageView *_imageView;
@property (retain, nonatomic, setter=_setFullsizeImageData:) NSData *_fullsizeImageData;
@property (retain, nonatomic, setter=_setFullsizeImageURL:) NSURL *_fullsizeImageURL;
@property (nonatomic, setter=_setFullsizeImageOrientation:) long long _fullsizeImageOrientation;
@property (nonatomic, setter=_setFullsizeImageUntransformedSize:) struct CGSize { double width; double height; } _fullsizeImageUntransformedSize;
@property (nonatomic, setter=_setFullsizeImageSize:) struct CGSize { double width; double height; } _fullsizeImageSize;
@property (retain, nonatomic, setter=_setFullsizeTiledLayer:) CALayer<PLTileableLayer> *_fullsizeTiledLayer;
@property (nonatomic, setter=_setDisplayingFullQualityImage:) BOOL _isDisplayingFullQualityImage;
@property (nonatomic, setter=_setAssetLoadingStage:) long long _assetLoadingStage;
@property (retain, nonatomic, setter=_setAssetLoadingStartDate:) NSDate *_assetLoadingStartDate;
@property (nonatomic, setter=_setShouldUsePenultimateVersionForNextImageUpdate:) BOOL shouldUsePenultimateVersionForNextImageUpdate;
@property (nonatomic) BOOL canUseFullsizeTiledLayer;
@property (nonatomic) BOOL requiresFullQualityImage;
@property (retain, nonatomic, setter=_setImageRequester:) PUImageRequester *_imageRequester;
@property (retain, nonatomic) PXImageLayerModulator *imageLayerModulator;
@property (retain, nonatomic) id<PXVKImageAnalysisInteraction> imageInteraction;
@property (readonly, nonatomic) UIImage *image;
@property (readonly, nonatomic) BOOL gainMapImageIsAvailable;
@property (readonly, nonatomic) struct CGImage { } *gainMapImage;
@property (readonly, nonatomic) float gainMapValue;
@property (retain, nonatomic) PUBrowsingViewModel *browsingViewModel;
@property (retain, nonatomic) PUAssetViewModel *assetViewModel;
@property (retain, nonatomic) id<PUDisplayAsset> asset;
@property (retain, nonatomic) PUMediaProvider *mediaProvider;
@property (retain, nonatomic) PXImageModulationManager *imageModulationManager;
@property (nonatomic) BOOL animatesImageAppearance;
@property (nonatomic) BOOL preserveImageDuringReload;
@property (nonatomic) BOOL shouldUseFullsizeImageData;
@property (copy, nonatomic) UIColor *placeholderColor;
@property (nonatomic) BOOL visualImageInteractionEnabled;
@property (weak, nonatomic) id<PUImageTileViewControllerPresentingDelegate> presentingDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)_supportedZoomImageFormats;

- (void)_updateTargetSizeIfNeeded;
- (void)updateModulator;
- (void)_handleBrowsingViewModel:(id)a0 didChange:(id)a1;
- (void)setEdgeAntialiasingEnabled:(BOOL)a0;
- (void)_handleShouldReloadAssetMediaNotification:(id)a0;
- (void)_removeVKImageInteractionFromImageView;
- (void)_updateReadyForDisplay;
- (void)_cancelAllImageRequests;
- (void)_updateFullsizeTiledLayerIfNeeded;
- (void)setGainMapImage:(struct CGImage { } *)a0;
- (BOOL)vkVisualSearchExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (id)generateAssetTransitionInfo;
- (void)_updateVisualIntelligenceUnitContentsRect;
- (void)_invalidateFullsizeTiledLayer;
- (void)updateModulatorInputs;
- (void)_invalidateTargetSize;
- (void)_handleAssetViewModel:(id)a0 didChange:(id)a1;
- (void)didChangeVisibleRect;
- (void)assetViewModelDidChange;
- (void)_updateImageLayerModulatorIfNeeded;
- (void)applyLayoutInfo:(id)a0;
- (void)_updateImageViewIfNeeded;
- (void)_setAssetWithoutUpdateIfNeeded:(id)a0;
- (void)_setVisualIntelligenceAnalyzingImageIfNeeded;
- (void)setGainMapValue:(float)a0;
- (void)imageAnalysisInteractionDidDismissVisualSearchController:(id)a0;
- (void)_updateImageLayerModulatorInputIfNeeded;
- (BOOL)wantsVisibleRectChanges;
- (void)imageAnalysisInteraction:(id)a0 didTapVisualSearchIndicatorWithNormalizedBoundingBox:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (void)_invalidateImage;
- (BOOL)shouldAvoidInPlaceSnapshottedFadeOut;
- (void)imageRequester:(id)a0 didChange:(id)a1;
- (void)_setImage:(id)a0 isFullQuality:(BOOL)a1;
- (struct CGSize { double x0; double x1; })targetSizeForProposedTargetSize:(struct CGSize { double x0; double x1; })a0;
- (void)_addVKImageInteractionToImageView;
- (void)_invalidateFullsizeImageMetadata;
- (void)_invalidateImageLayerModulator;
- (void)_invalidateImageLayerModulatorInput;
- (void)_updateVKAnalysisAndDisplayMode;
- (void)_updateAssetLoadingStage;
- (void)_invalidateVisualIntelligenceOverlayContentsRect;
- (BOOL)vkViewExistsAtPoint:(struct CGPoint { double x0; double x1; })a0;
- (void)_updateVisualIntelligenceOverlayContentsRectIfNeeded;
- (void)assetDidChange;
- (void)_invalidateImageView;
- (void)_updateImageIfNeeded;
- (void)viewModel:(id)a0 didChange:(id)a1;
- (void)becomeReusable;
- (void)_updateIfNeeded;
- (BOOL)_needsUpdate;
- (id)loadView;
- (void)_updateFullsizeImageMetadataIfNeeded;
- (void)updateMutableImageLayerModulator:(id)a0;
- (id)presentingViewControllerForImageAnalysisInteraction:(id)a0;
- (void).cxx_destruct;
- (void)setPreloadedImage:(id)a0;
- (void)dealloc;
- (void)_invalidate;

@end
