@class NSData, NSString, NSArray, NSMutableDictionary, NSDictionary, CNContact, CNContactStore, NSObject, IMStateCaptureAssistant;
@protocol OS_dispatch_queue;

@interface IMContactStore : NSObject <IMStateLoggable>

@property (retain, nonatomic) CNContactStore *contactStore;
@property (retain, nonatomic) NSData *currentHistoryToken;
@property (retain, nonatomic) NSDictionary *handleIDToCNIDMap;
@property (retain, nonatomic) NSMutableDictionary *CNIDToHandleIDsMap;
@property (retain, nonatomic) NSMutableDictionary *IDToCNContactMap;
@property (nonatomic) BOOL batchFetchingForLaunchCompleted;
@property (nonatomic) double lastContactStoreSync;
@property (nonatomic) double lastMeContactStoreSync;
@property (retain, nonatomic) CNContact *meContact;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *changeHistoryFetchQueue;
@property (retain, nonatomic) IMStateCaptureAssistant *stateCaptureAssistant;
@property (retain, nonatomic) NSArray *CNIDsForBatchFetch;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)logHistoryToken:(id)a0;
+ (id)emailsForCNContact:(id)a0;
+ (void)logDictionary:(id)a0 checkAdditionalLoggingEnabled:(BOOL)a1;
+ (BOOL)_shouldAllowContactStoreLookup;
+ (void)logContactFetchRequestResults:(id)a0;
+ (void)logHandleID:(id)a0;
+ (id)keysForMeContact;
+ (id)sharedInstance;
+ (id)_sortContactsFor:(id)a0;
+ (id)phoneticFullNameForCNContact:(id)a0;
+ (id)companyNameForCNContact:(id)a0;
+ (id)dialingCodeForID:(id)a0;
+ (void)logCNContact:(id)a0 andID:(id)a1;
+ (id)descriptionForCNContact:(id)a0;
+ (Class)IMCNContactFetchRequestClass;
+ (Class)IMCNChangeHistoryFetchRequestClass;
+ (id)phoneticFirstNameForCNContact:(id)a0;
+ (id)createMutableContactWithMapURL:(id)a0 andLocalizedLocationString:(id)a1;
+ (id)displayNameWithPhoneNumberOrEmailForContact:(id)a0;
+ (BOOL)shouldShowAbbreviatedNames;
+ (void)logHandleIDs:(id)a0 checkAdditionalLoggingEnabled:(BOOL)a1;
+ (id)abbreviatedNameForCNContact:(id)a0;
+ (id)keysForNicknameHandling;
+ (id)createMutableContactWithID:(id)a0;
+ (id)kIMCNContactEmailAddressesKey;
+ (id)kIMCNContactLinkIdentifierKey;
+ (id)nickNameForCNContact:(id)a0;
+ (id)displayNameWithCNNickNameOrFullNameOrCompanyNameOrAbbreviatedForContact:(id)a0;
+ (id)predicateForID:(id)a0;
+ (Class)IMCNLabeledValueClass;
+ (id)kIMCNContactPhoneNumbersKey;
+ (Class)IMCNContactFormatterClass;
+ (id)displayNameForContact:(id)a0;
+ (id)mePredicate;
+ (Class)IMCNMeCardSharingPickerViewControllerClass;
+ (id)kIMCNContactImageDataKey;
+ (id)validateAndCleanupID:(id)a0;
+ (id)IDsFromCNContact:(id)a0;
+ (void)_logArray:(id)a0 inBatchesOfSize:(long long)a1;
+ (id)phoneNumbersForCNContact:(id)a0;
+ (id)IMContactStoreQueue;
+ (void)logCNContact:(id)a0;
+ (id)validateAndFilterIDsForContactsBatchFetch:(id)a0;
+ (BOOL)isCNContactAKnownContact:(id)a0;
+ (id)kIMCNContactThumbnailImageDataKey;
+ (void)logDictionary:(id)a0;
+ (id)kIMCNContactIdentifierKey;
+ (BOOL)shouldShowNickNames;
+ (id)IDWithCurrentLocaleITUCode:(id)a0;
+ (id)fullNameForCNContact:(id)a0;
+ (id)keysForCNContact;
+ (id)phoneticLastNameForCNContact:(id)a0;
+ (id)lastNameForCNContact:(id)a0;
+ (id)_stringFromContact:(id)a0 withStyle:(long long)a1;
+ (void)_logDictionaryInformation:(id)a0 withSortedKeys:(id)a1 inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
+ (id)kIMCNContactImageDataAvailableKey;
+ (void)logDictionary:(id)a0 inBatchesOfSize:(long long)a1;
+ (Class)IMCNGeminiManagerClass;
+ (id)dialingForCurrentLocale;
+ (id)kIMCNContactCropRectKey;
+ (Class)IMCNPhoneNumberClass;
+ (id)firstNameForCNContact:(id)a0;
+ (Class)IMCNMutableContactClass;

- (void)addIDToCNIDToHandleIDsMap:(id)a0 withCNID:(id)a1;
- (id)stateDictionaryForDiagnosticsRequest;
- (void)cacheBatchFetchResults:(id)a0 handleIDsWithoutCNID:(id)a1;
- (id)init;
- (void)replaceContact:(id)a0 withID:(id)a1;
- (id)getContactStore;
- (void)generateCNIDToHandleIDMap;
- (id)initWithContactStore:(id)a0;
- (void)fetchCNContactsForHandlesWithIDs:(id)a0 isFinalBatch:(BOOL)a1;
- (void)setBatchFetchingIsCompleted:(BOOL)a0;
- (id)getAllKeysFromIDToCNContactMap;
- (void)addContact:(id)a0 withID:(id)a1;
- (void)meCardChanged:(id)a0;
- (void)removeIDFromCNIDToHandleIDsMap:(id)a0 withCNID:(id)a1;
- (id)fetchMeContactWithKeys:(id)a0 withError:(id *)a1;
- (void)contactStoreChanged:(id)a0;
- (id)fetchCNContactWithIdentifier:(id)a0;
- (id)fetchCNContactForHandleWithID:(id)a0;
- (id)getCNIDToHandleIDsMap;
- (id)fetchCNContactForHandleID:(id)a0 withKeys:(id)a1;
- (void).cxx_destruct;
- (id)completedContact:(id)a0 withKeys:(id)a1;
- (void)checkForContactStoreChanges;
- (id)getContactForID:(id)a0;
- (void)addEntriesToIDToCNContactMap:(id)a0;
- (id)fetchMeContactWithKeys:(id)a0;
- (BOOL)isIDAKnownContact:(id)a0;
- (id)getIDToCNContactMap;
- (id)handleIDsForCNID:(id)a0;
- (BOOL)isContactWithIDAlreadyFetched:(id)a0;
- (id)getHandleIDToCNIDMap;
- (void)dealloc;
- (void)handleDropEverythingEvent;
- (void)replaceWithMutableContactForID:(id)a0;
- (void)removeContactWithID:(id)a0;
- (void)setBatchFetchingCompleted;
- (BOOL)isBatchFetchingForLaunchCompleted;
- (void)resetMeCard;

@end
