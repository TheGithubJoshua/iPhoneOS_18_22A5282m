@class NSMutableOrderedSet, NSString, FBSSceneLayer, FBSWorkspace, FBSSceneIdentityToken, FBSScene, BKSApplicationStateMonitor, NSObject, _UIKeyboardArbiterClientHandle, NSXPCListener, _UIKeyboardChangedInformation, NSMutableArray;
@protocol _UIKeyboardArbiterOmniscientDelegate, _UIKeyboardArbiterLink, _UIKeyboardArbiterSceneDelegate, OS_dispatch_queue;

@interface _UIKeyboardArbiter : NSObject <NSXPCListenerDelegate, _UIKeyboardArbiterAdvisor> {
    NSObject<OS_dispatch_queue> *_queue;
    NSXPCListener *_listener;
    NSMutableArray *_clients;
    _UIKeyboardArbiterClientHandle *_previouslyActiveHandle;
    int _currentFocusPID;
    FBSSceneIdentityToken *_currentFocusSceneIdentity;
    struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _pendingFocusLock;
    unsigned long long _pendingFocusLock_generation;
    int _pendingFocusLock_PID;
    FBSSceneIdentityToken *_pendingFocusLock_sceneIdentity;
    _UIKeyboardArbiterClientHandle *_lastActivatedHandle;
    NSMutableOrderedSet *_recentlyActiveSceneIdentities;
    FBSWorkspace *_workspace;
    FBSScene *_scene;
    int _updateCounter;
    BKSApplicationStateMonitor *_stateMonitor;
    long long _lastEventSource;
    FBSSceneLayer *_sceneLayer;
    _UIKeyboardArbiterClientHandle *_disablingHandle;
}

@property (retain, nonatomic) _UIKeyboardChangedInformation *lastUpdate;
@property (readonly, weak) _UIKeyboardArbiterClientHandle *activeInputDestinationHandle;
@property (readonly, weak) _UIKeyboardArbiterClientHandle *focusRequestedHandle;
@property (readonly) FBSSceneLayer *sceneLayer;
@property (weak, nonatomic) _UIKeyboardArbiterClientHandle *keyboardUIHandle;
@property (nonatomic) unsigned long long keyboardScenePresentationMode;
@property (readonly, nonatomic) id<_UIKeyboardArbiterLink> sceneLink;
@property (weak, nonatomic) id<_UIKeyboardArbiterOmniscientDelegate> omniscientDelegate;
@property (weak, nonatomic) id<_UIKeyboardArbiterSceneDelegate> sceneDelegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) int presentingKeyboardProcessIdentifier;

+ (void)configureEncodedClassesForXPCConnection:(id)a0;
+ (BOOL)unitTestEnvironment;

- (void)_findForHandle:(id)a0 deepestHandleHandler:(id /* block */)a1 checklist:(id)a2;
- (void)reevaluateFocusedSceneIdentityForKeyboardFocusWithChangeInformation:(id)a0 stealingKeyboardOnSuccess:(BOOL)a1;
- (void)updateSuppression:(BOOL)a0 ofPIDs:(id)a1 active:(BOOL)a2;
- (id)_currentFocusedHandle;
- (void)checkHostingState;
- (BOOL)deactivateHandle:(id)a0;
- (void)completeKeyboardStatusChangedFromHandler:(id)a0;
- (void)keyboardFocusDidChangeWithoutAdvisorInputToPid:(int)a0 sceneIdentity:(id)a1;
- (void)_findForHandle:(id)a0 deepestHandleHandler:(id /* block */)a1;
- (void)_arbiterQueue_keyboardFocusDidChangeWithoutAdvisorInputForGeneration:(unsigned long long)a0 pid:(int)a1 sceneIdentity:(id)a2;
- (void)scheduleWindowTimeout;
- (void)_cullRecentlyActiveSceneIdentities;
- (void)_trackRecentlyActiveArbiterHandle:(id)a0;
- (void)updateKeyboardSceneSettings;
- (void)updateKeyboardUIStatus:(id)a0 fromHandler:(id)a1;
- (void)reevaluateHardwareKeyboardClientStealingKeyboardOnSuccess:(BOOL)a0;
- (void)retrieveClientDebugInformationWithCompletion:(id /* block */)a0;
- (void)_updateCurrentKeyboardFocusToPID:(int)a0 sceneIdentity:(id)a1;
- (void)attemptConnection;
- (void)setKeyboardTotalDisable:(BOOL)a0 withFence:(id)a1 fromHandler:(id)a2 completionHandler:(id /* block */)a3;
- (void)updateSceneClientSettings:(id)a0;
- (void)handlerRequestedFocus:(id)a0 shouldStealKeyboard:(BOOL)a1;
- (id)lastActivatedHandle;
- (id)initWithLink:(id)a0;
- (id)handlerForBundleID:(id)a0;
- (void)runOperations:(id /* block */)a0 onHandler:(id)a1 fromFunction:(const char *)a2;
- (void)handlerRequestedForcedClientSceneIdentityUpdate:(id)a0;
- (void)transition:(id)a0 eventStage:(unsigned long long)a1 withInfo:(id)a2 fromHandler:(id)a3;
- (void)_applyPendingSceneFocusUpdateFromOmniscientDelegateForGeneration:(unsigned long long)a0;
- (id)preferredSceneIdentityForKeyboardFocusWithChangeInformation:(id)a0;
- (id)_descriptionWithScene:(BOOL)a0;
- (void)captureStateForDebug;
- (void).cxx_destruct;
- (void)processWithPID:(int)a0 foreground:(BOOL)a1 suspended:(BOOL)a2;
- (id)hostForHandle:(id)a0 hosts:(id)a1;
- (id)handlerForToken:(id)a0;
- (void)resume;
- (void)setSuppressionCount:(int)a0 ofPIDs:(id)a1;
- (void)newClientConnected:(id)a0 withExpectedState:(id)a1 onConnected:(id /* block */)a2;
- (id)remoteFocusContext;
- (BOOL)listener:(id)a0 shouldAcceptNewConnection:(id)a1;
- (id)handlerForPID:(int)a0;
- (id)focusContext;
- (void)dealloc;
- (void)activateClients;
- (void)notifyHeightUpdated:(id)a0;
- (void)retrieveDebugInformationWithCompletion:(id /* block */)a0;
- (void)signalEventSourceChanged:(long long)a0 fromHandler:(id)a1 completionHandler:(id /* block */)a2;
- (void)updateSuppression:(BOOL)a0 ofPID:(id)a1 active:(BOOL)a2;
- (void)reevaluateSceneClientSettings;
- (id)hostBundleIdentifierForHandle:(id)a0 hosts:(id)a1;
- (void)handleUnexpectedDeallocForHandler:(id)a0;
- (id)_activeHandleForFocusEvaluation;
- (void)updateKeyboardStatus:(id)a0 fromHandler:(id)a1;
- (BOOL)activateHandle:(id)a0;
- (void)updateInterestedBundleIDs;

@end
