@class NSOperationQueue, SBSynchronizeCloudCriticalDataOperation, NSMutableDictionary, SBSensorActivityDataProvider, SBAlwaysOnCoverGestureRecognizer, SBApplicationAutoLaunchService, STTelephonyStateProvider, SBBacklightEnvironmentSessionProvider, SBHUDController, SBMousePointerManager, SBDisplayPortalManager, SBApplication, SBChamoisDisplayPrototypeController, SBAccessibilityWindowHostingControllerServer, SBMainDisplayInterfaceOrientationAggregator, SBMainWorkspace, SBWidgetController, SBUserAgent, SBAccountStoreManager, STMediaStatusDomainDisplayNameTransformer, STDynamicActivityAttributionManager, SBHomeScreenService, SBTestAutomationService, SBMirroredDisplayControllerProvider, NSObject, STAttributedEntityResolver, SBAudioRecordingManager, SBVolumeHardwareButton, SBCarDoNotDisturbController, SBRestartManager, SBHIDUISensorModeController, STLocationStatusDomainDisplayNameTransformer, DNDAWDMetricsService, SBIdleTimerPolicyAggregator, SBLockHardwareButton, NSDate, STDynamicActivityAttributionMonitor, SBNCNotificationDispatcher, BLSHService, SBBannerManager, UIWindow, SBModalAlertPresenter, SBRingerControl, SBScreenTimeTrackingController, SBRemoteAlertHandleServer, SBKeyboardFocusService, SBProximitySensorManager, SBAppSwitcherSystemService, SBBluetoothAccessoryBatteryMonitor, SBScreenshotManager, SBExternalDisplayService, SBMultiDisplayUserInteractionCoordinator, SBModalAlertPresentationCoordinator, SBSpotlightTransientOverlayViewController, SBCardItemsController, SBHomeHardwareButton, SBWebClipService, SBVoiceCommandButton, SBBrightnessControl, SBAvocadoDebuggingController, NSSet, SBVolumeButtonEventMapper, NSMutableSet, SBAppClipOverlayCoordinator, NSString, FCUIFocusEnablementIndicatorManager, SBSmartCoverService, SBExternalDisplayEducationObserver, STStatusServer, SBCombinationHardwareButton, SBRemoteTransientOverlaySessionManager, SBApplicationLaunchAlertService, NSMutableArray, SBPressPrecedenceArbiter, SBChronoApplicationProcessStateObserver, SBSpuriousScreenUndimmingAssertion, SBDisplayManager, SBDeveloperBuildExpirationTrigger, NSHashTable, RSPeerToPeerServerController, NSCountedSet, SBScreenSleepCoordinator, SBCameraHardwareButton, NSTimer, SBStatusBarStateAggregator, SBSystemUIScenesCoordinator, SBDeviceOrientationUpdateManager, DNDToggleManager, SBUserSessionController, SBPrivacyPreflightController, SBChronoHomeScreenUsageObserver, SBStateDumpService, SBSystemShellEmbeddedDisplayController, DNDNotificationsService, SBActivityManager, SBInteractiveScreenshotGestureManager, SBWindowSceneStatusBarSettingsAssertion, NSNumberFormatter, SBSoftwareUpdatePasscodePolicyManager, SBPIPControllerCoordinator, SBUIController, SBActivitySystemApertureElementObserver, SBLockScreenService, SBFUserAuthenticationController, SBWindowSceneManager, SBSceneHostingDisplayControllerProvider, SSScreenCapturer, SBVolumeControl;
@protocol OS_os_transaction, SBIdleTimer, BSInvalidatable, OS_dispatch_source, SBProximityBacklightPolicy, SBFLockOutStatusProvider;

@interface SpringBoard : UISystemShellApplication <SBWindowSceneTracking, MCProfileConnectionObserver, RSPeerToPeerConnectionControllerDataSource, SBRestartManagerDelegate, SBModalAlertPresentationCoordinatorDelegate, UIStatusBarStyleDelegate_SpringBoardOnly, SSScreenCapturerDelegate, SBBacklightControllerObserver, SBInteractiveScreenshotGestureManagerDelegate, SBRemoteTransientOverlaySessionManagerDelegate, SBSpotlightTransientOverlayViewControllerDelegate, _UIApplicationInitializationContextFactory, SBAVSystemControllerCacheObserver, SBWorkspaceKeyboardFocusControllerObserver, UIApplicationDelegate, SBIdleTimerProviding> {
    SBUIController *_uiController;
    double _headsetButtonDownTime;
    struct __IOHIDEvent { } *_headsetDownEvent;
    int _headsetClickCount;
    unsigned char _headsetButtonClickCount : 8;
    unsigned char _menuButtonClickCount : 8;
    unsigned char _screenWasDimOnMenuDown : 1;
    unsigned char _screenshotWasTaken : 1;
    unsigned char _headsetDownDelayedActionPerformed : 1;
    unsigned char _isSeekingInMedia : 1;
    unsigned char _ignoringCurrentLockButtonPress : 1;
    int _mediaSeekDirection;
    unsigned int _springBoardRequestsAccelerometerEvents;
    long long _activeInterfaceOrientation;
    NSHashTable *_activeInterfaceOrientationObservers;
    NSMutableArray *_activeInterfaceOrientationOverrideStack;
    BOOL _wantsOrientationEvents;
    int _notifyDontAnimateREOToken;
    int _notifyDontAllowMediaHUDToken;
    BOOL _expectsFaceContact;
    BOOL _expectsFaceContactInLandscape;
    BOOL _hardwareKeyboardAttached;
    BOOL _smartCoverClosed;
    BOOL _keybagRefetchTransactionIsActive;
    BOOL _menuButtonDown;
    id<BSInvalidatable> _smartCoverHIDUIAssertion;
    NSSet *_restrictionDisabledApplications;
    SBApplication *_inCallApp;
    SBApplication *_menuButtonInterceptApp;
    BOOL _menuButtonInterceptAppEnabledForever;
    SBApplication *_lastLockButtonEventRecipient;
    NSNumberFormatter *_decimalFormatter;
    NSNumberFormatter *_percentFormatter;
    NSTimer *_midnightTimer;
    NSDate *_midnightFireDate;
    NSObject<OS_dispatch_source> *_memoryPressureSource;
    unsigned int _memoryPressureStatus;
    NSMutableArray *_blocksAwaitingAvailableMemory;
    SBCardItemsController *_cardItemsController;
    unsigned long long _currentOverrides;
    struct __CFBoolean { } *_shouldDelaySleepForHeadsetClick;
    BOOL _didPlayLockSound;
    NSHashTable *_disableActiveOrientationChangeAssertions;
    NSCountedSet *_ignoringInteractionEventsReasons;
    SBWindowSceneStatusBarSettingsAssertion *_hideStatusBarAssertion;
    SBWindowSceneStatusBarSettingsAssertion *_showStatusBarAssertion;
    BOOL _atHomescreen;
    NSString *_logFile;
    SBBluetoothAccessoryBatteryMonitor *_bluetoothBatteryMonitor;
    SBDeveloperBuildExpirationTrigger *_developerBuildExpirationTrigger;
    SSScreenCapturer *_screenCapturer;
    SBSynchronizeCloudCriticalDataOperation *_synchronizeCloudCriticalDataOperation;
    SBModalAlertPresenter *_systemModalAlertPresenter;
    SBMainDisplayInterfaceOrientationAggregator *_orientationAggregator;
    SBDeviceOrientationUpdateManager *_deviceOrientationManager;
    BOOL _inUserTransition;
    BOOL _determiningBootTransition;
    BOOL _dontLockEver;
    SBPressPrecedenceArbiter *_pressPrecedenceArbiter;
    SBMainWorkspace *_mainWorkspace;
    id<BSInvalidatable> _keyboardFocusControllerObserver;
    long long _lastUpdatedMirroredDisplayOrientation;
    long long _mainTransientOverlayPresentationManagerInterfaceOrientation;
    long long _deviceOrientationChangePendedDuringStartupTransition;
    BOOL _hasDeviceOrientationChangePendedDuringStartupTransition;
    SBCarDoNotDisturbController *_carDoNotDisturbController;
    SBScreenTimeTrackingController *_screenTimeTrackingController;
    SBExternalDisplayEducationObserver *_displayConnectionObserver;
    SBChamoisDisplayPrototypeController *_chamoisDisplayPrototypeController;
    SBSpuriousScreenUndimmingAssertion *_preventPowerSourceAlertsDarkBootAssertion;
    id<BSInvalidatable> _deferOrientationUpdatesForKeybagAssertion;
    SBSmartCoverService *_smartCoverService;
    SBHomeScreenService *_homeScreenService;
    SBChronoHomeScreenUsageObserver *_widgetHomeScreenUsageObserver;
    SBChronoApplicationProcessStateObserver *_widgetApplicationProcessStateObserver;
    SBAppSwitcherSystemService *_appSwitcherSystemService;
    long long _lastSeekRequestSource;
    DNDAWDMetricsService *_dndAWDMetricsService;
    DNDNotificationsService *_dndNotificationsService;
    SBRemoteAlertHandleServer *_remoteAlertHandleServer;
    SBTestAutomationService *_testAutomationService;
    SBStateDumpService *_stateDumpService;
    unsigned long long _stateDumpServiceRevision;
    NSCountedSet *_spotlightTransientOverlayRequiringReasons;
    SBSpotlightTransientOverlayViewController *_spotlightTransientOverlayViewController;
    NSHashTable *_activeRemoteTransientOverlayViewProviders;
    id /* block */ _headsetButtonUpHandler;
    SBAccessibilityWindowHostingControllerServer *_accessibilityWindowHostingController;
    id<BSInvalidatable> _pipSpotlightWindowLevelAssertionInvalidatable;
    NSMutableSet *_keyboardUsagePairsDown;
    NSMutableDictionary *_typingActivePIDsAndDeathWatchers;
    BOOL _swallowKeyboardEvents;
    BOOL _requestingStatusBarStyleWithoutConsideringAlerts;
    DNDToggleManager *_dndToggleManager;
    NSMutableDictionary *_volumePressTypesRequringButtonUpPresses;
    NSObject<OS_os_transaction> *_takingScreenshotTransaction;
    SBSystemShellEmbeddedDisplayController *_embeddedDisplayController;
    SBSceneHostingDisplayControllerProvider *_extendedDisplayControllerProvider;
    SBSceneHostingDisplayControllerProvider *_nonInteractiveDisplayControllerProvider;
    SBMirroredDisplayControllerProvider *_baselineDisplayControllerProvider;
    SBActivityManager *_activityManager;
    STDynamicActivityAttributionMonitor *_systemStatusDynamicAttributionMonitor;
    STAttributedEntityResolver *_systemStatusMediaEntityResolver;
    STAttributedEntityResolver *_systemStatusLocationEntityResolver;
    STLocationStatusDomainDisplayNameTransformer *_systemStatusLocationDomainTransformer;
    STMediaStatusDomainDisplayNameTransformer *_systemStatusMediaDomainTransformer;
    SBActivitySystemApertureElementObserver *_activitySystemApertureElementObserver;
    SBAlwaysOnCoverGestureRecognizer *_alwaysOnCoverGestureRecognizer;
    SBKeyboardFocusService *_keyboardFocusService;
    BOOL _startupTransitionHasFinished;
    NSOperationQueue *_postStartupOperationQueue;
    FCUIFocusEnablementIndicatorManager *_focusEnablementIndicatorManager;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSMutableArray *nowLocatingApps;
@property (retain, nonatomic, setter=_setIdleTimer:) id<SBIdleTimer> idleTimer;
@property (retain, nonatomic) NSTimer *daylightSavingsTimer;
@property (nonatomic) int nowPlayingProcessPID;
@property (nonatomic, getter=isBatterySaverModeActive) BOOL batterySaverModeActive;
@property (readonly, nonatomic) SBCombinationHardwareButton *combinationHardwareButton;
@property (readonly, nonatomic) SBVolumeButtonEventMapper *volumeButtonEventMapper;
@property (retain, nonatomic) RSPeerToPeerServerController *stateDumpServerController;
@property BOOL hasFinishedLaunching;
@property (nonatomic) double bottomEdgeAmbiguousActivationMargin;
@property (readonly, nonatomic) SBUserAgent *pluginUserAgent;
@property (readonly, nonatomic) SBApplication *leastRecentlyForegroundLocatingApp;
@property (readonly, nonatomic) SBUserSessionController *userSessionController;
@property (readonly, nonatomic) SBHomeHardwareButton *homeHardwareButton;
@property (readonly, nonatomic) SBLockHardwareButton *lockHardwareButton;
@property (readonly, nonatomic) SBVolumeHardwareButton *volumeHardwareButton;
@property (readonly, nonatomic) SBCameraHardwareButton *cameraHardwareButton;
@property (readonly, nonatomic) SBVoiceCommandButton *voiceCommandButton;
@property (readonly, nonatomic) id<SBFLockOutStatusProvider> lockOutController;
@property (readonly, nonatomic) SBFUserAuthenticationController *authenticationController;
@property (readonly, nonatomic) SBScreenshotManager *screenshotManager;
@property (readonly, nonatomic) SBNCNotificationDispatcher *notificationDispatcher;
@property (readonly, nonatomic) SBBannerManager *bannerManager;
@property (readonly, nonatomic) SBWidgetController *widgetController;
@property (readonly, nonatomic) SBAvocadoDebuggingController *avocadoController;
@property (readonly, nonatomic) SBRestartManager *restartManager;
@property (readonly, nonatomic) SBModalAlertPresentationCoordinator *modalAlertPresentationCoordinator;
@property (readonly, nonatomic) SBAccountStoreManager *accountStoreController;
@property (readonly, nonatomic) NSMutableArray *appsRegisteredForVolumeEvents;
@property (readonly, nonatomic) NSMutableArray *appsRegisteredForLockButtonEvents;
@property (readonly, nonatomic) SBLockScreenService *lockScreenService;
@property (readonly, nonatomic) SBApplicationAutoLaunchService *applicationAutoLaunchService;
@property (readonly, nonatomic) SBApplicationLaunchAlertService *applicationLaunchAlertService;
@property (readonly, nonatomic) SBIdleTimerPolicyAggregator *idleTimerPolicyAggregator;
@property (readonly, nonatomic) SBInteractiveScreenshotGestureManager *interactiveScreenshotGestureManager;
@property (readonly, nonatomic) SBPIPControllerCoordinator *pictureInPictureCoordinator;
@property (readonly, nonatomic) SBProximitySensorManager *proximitySensorManager;
@property (readonly, nonatomic) id<SBProximityBacklightPolicy> proximityBacklightPolicy;
@property (readonly, nonatomic) SBDisplayManager *displayManager;
@property (readonly, nonatomic) SBHIDUISensorModeController *HIDUISensorController;
@property (readonly, nonatomic) SBMainDisplayInterfaceOrientationAggregator *orientationAggregator;
@property (readonly, nonatomic) SBSoftwareUpdatePasscodePolicyManager *softwareUpdatePasscodePolicyManager;
@property (readonly, nonatomic) STStatusServer *systemStatusServer;
@property (readonly, nonatomic) STDynamicActivityAttributionManager *dynamicAttributionManager;
@property (readonly, nonatomic) STTelephonyStateProvider *telephonyStateProvider;
@property (readonly, nonatomic) SBSensorActivityDataProvider *sensorActivityDataProvider;
@property (readonly, nonatomic) SBStatusBarStateAggregator *statusBarStateAggregator;
@property (readonly, nonatomic) SBMousePointerManager *mousePointerManager;
@property (readonly, nonatomic) SBWebClipService *webClipService;
@property (readonly, nonatomic) SBAppClipOverlayCoordinator *appClipOverlayCoordinator;
@property (readonly, nonatomic) BLSHService *blshService;
@property (readonly, nonatomic) int ringerSwitchState;
@property (readonly, nonatomic) SBWindowSceneManager *windowSceneManager;
@property (readonly, nonatomic) SBMultiDisplayUserInteractionCoordinator *multiDisplayUserInteractionCoordinator;
@property (readonly, nonatomic) SBSystemUIScenesCoordinator *systemUIScenesCoordinator;
@property (readonly, nonatomic) SBBacklightEnvironmentSessionProvider *backlightEnvironmentSessionProvider;
@property (readonly, nonatomic) SBScreenSleepCoordinator *screenSleepCoordinator;
@property (readonly, nonatomic) SBDisplayPortalManager *displayPortalManager;
@property (readonly, nonatomic) SBPrivacyPreflightController *privacyPreflightController;
@property (readonly, nonatomic) SBExternalDisplayService *externalDisplayService;
@property (readonly, nonatomic) SBHUDController *HUDController;
@property (readonly, nonatomic) SBRingerControl *ringerControl;
@property (readonly, nonatomic) SBVolumeControl *volumeControl;
@property (readonly, nonatomic) SBBrightnessControl *brightnessControl;
@property (readonly, nonatomic) SBRemoteTransientOverlaySessionManager *remoteTransientOverlaySessionManager;
@property (readonly, nonatomic) BOOL wantsOrientationEvents;
@property (readonly, nonatomic, getter=isTypingActive) BOOL typingActive;
@property (readonly, nonatomic) SBAudioRecordingManager *audioRecordingManager;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) UIWindow *window;

+ (id)_newApplicationInitializationContext;
+ (void)initializeSystemServicesBeforeApplicationDidFinishLaunching;

- (BOOL)disablesFrontBoardImplicitWindowScenes;
- (unsigned long long)statusBar:(id)a0 effectiveStyleOverridesForRequestedStyle:(long long)a1 overrides:(unsigned long long)a2;
- (void)noteBacklightFadeFinished;
- (BOOL)_isDim;
- (void)willDisplayMiniAlert;
- (BOOL)_supportsAlwaysOnDisplay;
- (void)takeScreenshot;
- (BOOL)underMemoryPressure;
- (void)didDismissMiniAlert;
- (id)inCallApp;
- (BOOL)isCurrentlyDeferringOrientationUpdates;
- (BOOL)canOpenURL:(id)a0;
- (void)keyboardFocusController:(id)a0 externalSceneDidAcquireFocus:(id)a1;
- (void)iconScrollViewWillCancelTouchTracking:(id)a0;
- (long long)activeInterfaceOrientation;
- (void)setNextAssistantRecognitionStrings:(id)a0;
- (id)_windowForSystemAppButtonEventsForScreen:(id)a0;
- (long long)startupInterfaceOrientation;
- (BOOL)supportsPortraitUpsideDownOrientation;
- (void)_keyboardAvailabilityChanged;
- (void)_handleGotoHomeScreenShortcut:(id)a0;
- (void)restartManagerWillShutdown:(id)a0;
- (BOOL)handleStatusBarHoverActionForRegion:(long long)a0;
- (id)_keyWindowForScreen:(id)a0;
- (void)_uninstallModelForTestsAndRestoreAppLayouts:(id)a0;
- (long long)interfaceOrientationForRawOrientation:(long long)a0 validOrientation:(long long)a1 ignoringHomeScreenRotationStyle:(BOOL)a2;
- (void)localeChanged;
- (void)_continueRunningDismissAppSwitcherTestWithCompletion:(id /* block */)a0;
- (BOOL)runTest:(id)a0 options:(id)a1;
- (BOOL)handleDoubleHeightStatusBarTapWithStyleOverride:(unsigned long long)a0;
- (void)iconScrollViewDidCancelTouchTracking:(id)a0;
- (id)_appIconsToPutInFolderForTest;
- (id)init;
- (void)_runDashBoardDismissFromPasscodeViewAfterAuthenticationTest;
- (void)_performFourFingerSwipeWithComposer:(id)a0 vertically:(BOOL)a1 duration:(double)a2;
- (void)runFieldTestScript;
- (void)resetIdleTimerAndUndim;
- (void)_handlePreviousSwitcherSpaceKeyShortcut:(id)a0;
- (void)_updateOrientationDetectionSettings;
- (long long)deviceOrientationForDeferredUpdateIfAny;
- (void)_runFourFingerSwipeTest;
- (BOOL)smartCoverIsClosed;
- (void)_runAddWidgetSheetTest;
- (struct CGSize { double x0; double x1; })scrollView:(id)a0 contentSizeForZoomScale:(double)a1 withProposedSize:(struct CGSize { double x0; double x1; })a2;
- (void)noteInterfaceOrientationChanged:(long long)a0 duration:(double)a1 logMessage:(id)a2;
- (void)nowLocatingAppDidEnterForeground:(id)a0;
- (id)_accessibilityTopDisplay;
- (id)transactionForDismissingSearchTransientOverlay;
- (void)wipeDeviceNowWithReason:(id)a0;
- (void)scrollViewDidEndDragging:(id)a0 willDecelerate:(BOOL)a1;
- (void)beginIgnoringInteractionEvents;
- (void)validateCommand:(id)a0;
- (void)_initializeAndStartObservingDefaultsIfNecessary;
- (void)_runMedusaPinFloatingApplicationTest:(id)a0 withOptions:(id)a1;
- (void)pushTransientActiveInterfaceOrientation:(long long)a0 forReason:(id)a1;
- (id)_findView:(id)a0 passingTest:(id /* block */)a1;
- (void)applicationDidFinishLaunching:(id)a0;
- (void)_smartCoverDidClose:(struct __IOHIDEvent { } *)a0;
- (id)application:(id)a0 configurationForConnectingSceneSession:(id)a1 options:(id)a2;
- (BOOL)remoteTransientOverlaySessionManager:(id)a0 performDismissalRequest:(id)a1 forSession:(id)a2;
- (BOOL)remoteTransientOverlaySessionManager:(id)a0 prefersStatusBarActivityItemVisibleForServiceBundleIdentifier:(id)a1 forSession:(id)a2;
- (BOOL)_handlePhysicalButtonEvent:(id)a0;
- (void)frontDisplayDidChange:(id)a0;
- (void)_runAppOpen:(BOOL)a0 withCompletion:(id /* block */)a1;
- (void)_handleHomeScreenNavigateTrailing:(id)a0;
- (BOOL)iconScrollView:(id)a0 shouldSetAutoscrollContentOffset:(struct CGPoint { double x0; double x1; })a1;
- (void)_caseLatchWantsToAttemptLock;
- (BOOL)isLocked;
- (id)statusBarWindowForEmbeddedDisplay;
- (void)batteryStatusDidChange:(id)a0;
- (void)_enableActivities:(BOOL)a0;
- (void)_handleSystemNotesPIPKeyShortcut:(id)a0;
- (BOOL)_systemShellAllowsInteractionTrackingKeyboardFocusUpdateForWindow:(id)a0;
- (void)_performSwipeHomeWithComposer:(id)a0;
- (void)finishedTest:(id)a0 extraResults:(id)a1 waitForNotification:(id)a2 withTeardownBlock:(id /* block */)a3;
- (void)_batterySaverModeChanged:(int)a0;
- (id)embeddedDisplayWindowScene;
- (long long)_testOrientation:(id)a0 options:(id)a1;
- (id)_accessibilityRunningApplications;
- (void)_prepareToRunAutoPIPTestWithCompletion:(id /* block */)a0;
- (void)_performPanGestureTowardsUserInterfaceLayoutDirectionOnScreenWithDuration:(double)a0 completion:(id /* block */)a1;
- (BOOL)homeScreenSupportsRotation;
- (void)_logReliabilityInfoForEvent:(struct __IOHIDEvent { } *)a0 source:(int)a1;
- (void)registerRemoteAlertSceneViewProvider:(id)a0;
- (void)_runScrollTestWithScrollView:(id)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)setExpectsFaceContact:(BOOL)a0 inLandscape:(BOOL)a1;
- (BOOL)iapIsInExtendedMode;
- (void)_preWarmAllIconPagesWithCompletion:(id /* block */)a0;
- (void)_runVolumeChangeWithCompletion:(id /* block */)a0;
- (id)layoutPublisherForPhysicalDisplay:(id)a0;
- (void)_medusaTestWithName:(id)a0 testOptions:(id)a1;
- (void)_resetForceRotate;
- (void)updateNativeOrientationWithOrientation:(long long)a0 logMessage:(id)a1;
- (void)backlightController:(id)a0 willAnimateBacklightToFactor:(float)a1 source:(long long)a2;
- (void)scrollViewDidEndDecelerating:(id)a0;
- (void)_setUpHUDControllerAndFriends;
- (void)_performLeftToRightPanGestureOnScreenWithDuration:(double)a0 completion:(id /* block */)a1;
- (void)noteBacklightLevelChanged;
- (void)startLaunchTestNamed:(id)a0 options:(id)a1;
- (void)_setReachabilitySupported:(BOOL)a0;
- (void)_takeScreenshotWithOptionsCollection:(id)a0 presentationOptions:(id)a1;
- (void)_runFourFingerSwipeMultipleAppsTest;
- (void)_takeScreenshotAndEdit:(BOOL)a0;
- (void)_screenshotWindowWillBeDisplayed;
- (void)_startScrollAppSwitcherTest:(id)a0 overApp:(BOOL)a1 runColdTest:(BOOL)a2 completion:(id /* block */)a3;
- (void)_unscatterWillBegin:(id)a0;
- (void)_postActiveInterfaceOrientationChangedNotificationAnimated:(BOOL)a0;
- (void)interactiveScreenshotGestureManager:(id)a0 requestsScreenshotPreheatWithPresentationOptions:(id)a1;
- (void)_removeTransientActiveInterfaceOrientationOverrideForReason:(id)a0;
- (void)_performDragFromPoint:(struct CGPoint { double x0; double x1; })a0 andDragTo:(struct CGPoint { double x0; double x1; })a1 duration:(double)a2 fromView:(id)a3 withCompletion:(id /* block */)a4;
- (void)_scheduleSharedIPadPostStartupOperation:(id /* block */)a0;
- (void)_disableRemoteStateDumpWithCompletion:(id /* block */)a0;
- (void)_performSwipeWithComposer:(id)a0 startLocation:(struct CGPoint { double x0; double x1; })a1 endLocation:(struct CGPoint { double x0; double x1; })a2 duration:(double)a3 timingFunction:(id)a4 intermediateTransformer:(id /* block */)a5 completion:(id /* block */)a6;
- (void)_runDashBoardRotationTestWithCompletion:(id /* block */)a0;
- (long long)_frontMostAppOrientation;
- (void)_smartCoverDidOpen:(struct __IOHIDEvent { } *)a0;
- (id)_legacy_deviceOrientationUpdateManager;
- (void)_handleHomeScreenNavigateIn:(id)a0;
- (BOOL)_prepareButtonEvent:(id)a0 type:(long long)a1 phase:(long long)a2 timestamp:(double)a3 force:(double)a4 clickCount:(unsigned long long)a5 longClick:(BOOL)a6 contextID:(unsigned int)a7;
- (id)_applicationToUseForOpenAndCloseTesting;
- (void)_toggleAppLibraryVisibility:(id)a0;
- (void)_handleCommandTab:(id)a0;
- (void)_runMedusaTest:(id)a0 withMainWorkspaceTransition:(id /* block */)a1 options:(id)a2;
- (void)remoteTransientOverlaySessionManager:(id)a0 requestsHandlingForButtonEvents:(unsigned long long)a1 forSession:(id)a2 viewController:(id)a3;
- (void)removeActiveOrientationObserver:(id)a0;
- (id)setNextVoiceRecognitionAudioInputPaths:(id)a0;
- (BOOL)_shouldPendAlertsForTest:(id)a0;
- (id)_singleHomeButtonPressEventStream;
- (void)_turnScreenOnOnDashBoardWithCompletion:(id /* block */)a0;
- (BOOL)iconScrollView:(id)a0 shouldSetContentOffset:(struct CGPoint { double x0; double x1; } *)a1 animated:(BOOL)a2;
- (id)coordinatorRequestedIdleTimerBehavior:(id)a0;
- (void)_runDashBoardScrollToLeftPageTestWithBlur:(BOOL)a0;
- (void)cache:(id)a0 didUpdateActiveAudioRoute:(id)a1;
- (BOOL)shouldShowAlertForUnhandledURL:(id)a0 error:(int)a1;
- (void)scrollViewWillEndDragging:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)_basicRotationTestForCurrentConfigurationWithTeardown:(id /* block */)a0;
- (void)_accessibilityActivationAnimationWillBegin;
- (void)_handleKeyDownEvent_DisplayBrightnessChange:(struct __IOHIDEvent { } *)a0 modifiers:(long long)a1;
- (void)_setStatusBarOrientation:(long long)a0 logMessage:(id)a1;
- (id)_settingLanguageStringForNewLanguage;
- (void)significantTimeChange;
- (void)scrollViewDidEndScrolling:(id)a0;
- (void)_openURLCore:(id)a0 display:(id)a1 animating:(BOOL)a2 activationSettings:(id)a3 origin:(id)a4 withResult:(id /* block */)a5;
- (void)_runBottomEdgeSwipeTestFromHomeScreen:(BOOL)a0;
- (long long)_bootOrientation;
- (void)_performMainWorkspaceTransitionWithPrimaryWorkspaceEntity:(id)a0 sideWorkspaceEntity:(id)a1 floatingWorkspaceEntity:(id)a2 spaceConfiguration:(long long)a3 floatingConfiguration:(long long)a4 animated:(BOOL)a5 completion:(id /* block */)a6;
- (void)setMenuButtonInterceptApp:(id)a0 forever:(BOOL)a1;
- (void)_runAppSearchPresent;
- (void)_iapExtendedModeReset;
- (void)_keyboardOrCaseLatchWantsToAttemptUnlock:(int)a0;
- (void)_runDashBoardRotateCameraPage;
- (void)_runHomeScreenSearchPresent;
- (void)_localeChanged;
- (void)startLaunchTestNamed:(id)a0 options:(id)a1 withCompletionBlock:(id /* block */)a2;
- (void)_pullDownToSpotlightForView:(id)a0 offset:(double)a1 duration:(double)a2 completion:(id /* block */)a3;
- (void)_startSystemStatusServerAndFriends;
- (void)keyboardFocusController:(id)a0 didUpdateWindowSceneWithFocusFrom:(id)a1 to:(id)a2;
- (void)_runStackConfigurationTransition;
- (void)launchMusicPlayerSuspended;
- (void)applicationOpenURL:(id)a0;
- (void)_runHomeScreenSearchDismiss;
- (long long)windowingModeForDisplay:(id)a0;
- (void)rotateIfNeeded:(long long)a0 completion:(id /* block */)a1;
- (void)_returnToHomeScreenWithCompletion:(id /* block */)a0;
- (BOOL)launchedForUserTransition;
- (void)_handleStandardFunctionKeyActionWithPreferencesURLString:(id)a0 modifiers:(long long)a1 block:(id /* block */)a2;
- (void)_coverGestureDidRecognize:(id)a0;
- (id)_dashBoardCombinedListViewController;
- (void)_handleSnapshotButtonHIDEvent:(struct __IOHIDEvent { } *)a0 buttonIsDown:(BOOL)a1 fromSource:(int)a2;
- (id)formattedDecimalStringForNumber:(id)a0;
- (void)updateNativeOrientationWithOrientation:(long long)a0 updateMirroredDisplays:(BOOL)a1 animated:(BOOL)a2 logMessage:(id)a3;
- (void)_setupSystemApertureProximityBacklightPolicyDelegateForMainDisplayWindowScene:(id)a0;
- (void)_runPresentContinuityBannerInSwitcherTestWithCompletion:(id /* block */)a0;
- (void)_runCoverSheetNotificationListHistoryRevealTest;
- (void)_setDeferredHeadsetButtonDownEvent:(struct __IOHIDEvent { } *)a0;
- (BOOL)shouldNeverLock;
- (double)windowRotationDuration;
- (void)_handleActivateAsFloatingAppKeyShortcut:(id)a0;
- (void)_daylightSavingsTimeChanged;
- (BOOL)expectsFaceContactInLandscape;
- (void)setUpDaylightSavingsTimer;
- (id)systemApertureControllerForMainDisplay;
- (void)updateNativeOrientationAnimated:(BOOL)a0 logMessage:(id)a1;
- (void)didReceiveMemoryWarning;
- (void)setWantsOrientationEvents:(BOOL)a0 logMessage:(id)a1;
- (void)_adjustSignificantTimersAfterSleep;
- (id)formattedPercentStringForNumber:(id)a0;
- (void)_forceRotateToOrientation:(long long)a0 withCompletion:(id /* block */)a1;
- (BOOL)remoteTransientOverlaySessionManager:(id)a0 performPresentationRequest:(id)a1 forSession:(id)a2;
- (void)_prepareToRunSwitcherGestureTestsWithCompletion:(id /* block */)a0;
- (id)supportedStateTypes;
- (void)scrollViewWillBeginDragging:(id)a0;
- (void)_handleApplicationExit:(id)a0;
- (void)runHomeScreenRotationIterationWithRemainingIterations:(int)a0 completionHandler:(id /* block */)a1;
- (void)_removeAllFakeNotifications;
- (void)_runWidgetConfigurationTransitionFromEditingMode:(BOOL)a0;
- (void)addNowLocatingApp:(id)a0;
- (void)_runLeftRightTodayViewScrollWidgetsTestWithOptions:(id)a0;
- (void)_performSwipeWithComposer:(id)a0 startLocation:(struct CGPoint { double x0; double x1; })a1 endLocation:(struct CGPoint { double x0; double x1; })a2 duration:(double)a3;
- (void)_startAutoPIPWithGesture:(id /* block */)a0 setupCompletion:(id /* block */)a1 finalCompletion:(id /* block */)a2;
- (void)_handleEnterFullScreenKeyShortcut:(id)a0;
- (id)_applicationToUseForScrollTesting;
- (void)_updateChamoisWindowingUIEnabledIfNeededForTest:(id)a0;
- (void)_adjustDaylightSavingsTimerAfterSleep;
- (void)_handleActivateNotificationCenterKeyShortcut:(id)a0;
- (void)_handleNavigateAppWindowKeyShortcut:(id)a0;
- (BOOL)_shouldEnableActivities;
- (BOOL)canShowLockScreenCameraGrabber;
- (void)_runScrunchAndSwipeMultipleAppsTest;
- (id)_homeScreenTodayViewEventStreamWithDismissal:(BOOL)a0;
- (long long)activeInterfaceOrientationWithoutConsideringTransientOverlays;
- (long long)statusBarOrientationForEmbeddedDisplay;
- (BOOL)lockScreenCameraSupported;
- (id)_defaultExpirationComponents;
- (void)_performTapAtPoint:(struct CGPoint { double x0; double x1; })a0 fromView:(id)a1 withCompletion:(id /* block */)a2;
- (void)_lockdownActivationChanged:(id)a0;
- (void)setNowPlayingInfo:(id)a0 forProcessWithPID:(int)a1;
- (void)_setTypingActive:(BOOL)a0;
- (void)_runDismissContinuityBannerInSwitcherTestWithCompletion:(id /* block */)a0;
- (void)_updateHomeScreenPresenceNotification:(id)a0;
- (void)modalAlertPresentationCoordinator:(id)a0 didChangeShowingSystemModalAlert:(BOOL)a1;
- (void)_runSwipeToHomeTestWithCompletion:(id /* block */)a0;
- (id)_doubleHomeButtonPressEventStream;
- (void)runHomeScreenRotationTest:(int)a0;
- (void)updateMirroredDisplayOrientationWithLogMessage:(id)a0;
- (void)sendEvent:(id)a0;
- (void)_handleOpenAppSwitcherShortcut:(id)a0;
- (long long)rawDeviceOrientationIgnoringOrientationLocks;
- (void)_runSpotlightTodayViewRotation;
- (void)screenCapturer:(id)a0 didCaptureScreenshotsOfScreens:(id)a1;
- (void)_runScrollIconListTestForTestName:(id)a0 testOptions:(id)a1;
- (void)spotlightTransientOverlayViewControllerRequestsDismissal:(id)a0;
- (void)_runDashBoardPresentDismissPasscode;
- (void)_performAfterDelay:(double)a0 block:(id /* block */)a1;
- (BOOL)_isRemoteStateDumpEnabled;
- (BOOL)hasDisableActiveInterfaceOrientationChangeAssertions;
- (void)_prepareToRunSwitcherGestureTestsWithForegroundApp:(id)a0 shouldStartTest:(BOOL)a1 withCompletion:(id /* block */)a2;
- (void)_cleanupMainWorkspaceForMedusaTestWithCompletion:(id /* block */)a0;
- (void)_runMedusaUnpinFloatingApplicationTest:(id)a0 withOptions:(id)a1;
- (void)noteInterfaceOrientationChanged:(long long)a0 duration:(double)a1 updateMirroredDisplays:(BOOL)a2 logMessage:(id)a3;
- (void)setAppRegisteredForLockButtonEvents:(id)a0 isActive:(BOOL)a1;
- (id)localPeerDisplayName;
- (id)remoteTransientOverlaySessionManager:(id)a0 embeddedDisplayWindowSceneForRemoteTransientOverlaySession:(id)a1;
- (void)_applicationOpenURL:(id)a0 withApplication:(id)a1 animating:(BOOL)a2 activationSettings:(id)a3 origin:(id)a4 withResult:(id /* block */)a5;
- (void)spotlightTransientOverlayViewControllerWillDismiss:(id)a0;
- (void)_runDashBoardDismissWhileAuthenticatedTest;
- (void)_prepareToRunSwitcherGestureTestsWithForegroundApp:(id)a0 shouldStartTest:(BOOL)a1 forcedOrientation:(long long)a2 withCompletion:(id /* block */)a3;
- (void)_headsetButtonDown:(struct __IOHIDEvent { } *)a0;
- (void)noteSubstantialTransitionOccured;
- (void)_runBottomEdgeSwipeMultipleAppsTest;
- (void)_runNotificationCoalescingRestackingTestWithOptions:(id)a0;
- (void)_runSpotlightPulldownRotation;
- (void)_handleActivateAppExposeKeyShortcut:(id)a0;
- (BOOL)_shouldSwallowHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)noteInterfaceOrientationChanged:(long long)a0 force:(BOOL)a1 logMessage:(id)a2;
- (void)_runSwipeToHomeOverFolderTest;
- (void)_handleKeyUIEvent:(id)a0;
- (void)_runDashBoardScrollFromLeftToRightPageTestWithBlur:(BOOL)a0;
- (void)_postSpringBoardSignificantTimeChangedNotificationWithLogMessage:(id)a0;
- (void)_runTodayViewScrollWidgetsTestWithOptions:(id)a0;
- (void)noteMainTransientOverlayPresentationManagerWillChangeToInterfaceOrientation:(long long)a0;
- (id)deviceOrientationUpdateDeferralAssertionWithReason:(id)a0;
- (void)updateNativeOrientationAndMirroredDisplays:(BOOL)a0 logMessage:(id)a1;
- (void)_startSeekWithDirection:(id)a0;
- (void)_performDeferredLaunchWork;
- (void)setSystemVolumeHUDEnabled:(BOOL)a0 forAudioCategory:(id)a1;
- (void)_initializeDeferredItems;
- (BOOL)isBundleIdentifierRestrictionDisabled:(id)a0;
- (void)updateNativeOrientationWithLogMessage:(id)a0;
- (void)addInCallApp:(id)a0;
- (void)_enqueueWorkspaceEvent:(id /* block */)a0 withName:(id)a1 ifSatisfiesCondition:(id /* block */)a2 cancelingEventsWithNames:(id)a3 failureBlock:(id /* block */)a4;
- (void)_performScrunchAndSwipeWithComposer:(id)a0;
- (void)_simulateUserScrollForNotificationListWithCount:(unsigned long long)a0 completion:(id /* block */)a1;
- (void)_iapServerConnectionDiedNotification:(id)a0;
- (void)_toggleFloatingDockVisibility:(id)a0;
- (void)_handleRemoveWindowFromSetShortcut:(id)a0;
- (void).cxx_destruct;
- (void)_runSwipeAndPauseForSwitcherOverFolderTest;
- (void)_enableRemoteStateDumpWithTimeout:(long long)a0 withCompletion:(id /* block */)a1;
- (void)_registerForAVSystemControllerNotifications;
- (void)noteInterfaceOrientationChanged:(long long)a0 duration:(double)a1 updateMirroredDisplays:(BOOL)a2 force:(BOOL)a3 logMessage:(id)a4;
- (void)runFolderRotationTest:(int)a0;
- (void)removeInCallApp;
- (void)_handleApplicationProcessStateDidChangeNotification:(id)a0;
- (void)_runNotificationCoalescingExpandingTestWithOptions:(id)a0;
- (long long)homeScreenRotationStyle;
- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(id)a0 userInfo:(id)a1;
- (void)_runScrollAppSwitcherLandscapeTest:(id)a0 overApp:(BOOL)a1 completion:(id /* block */)a2;
- (void)_adjustMidnightTimerAfterSleep;
- (void)_unlockAnimationDidFinish:(id)a0;
- (void)endIgnoringInteractionEventsForReason:(id)a0;
- (void)_handleShutDownAndReboot;
- (void)_runHomeScreenSwipeRightFromTodayView;
- (BOOL)interactiveScreenshotGestureManagerShouldPreventGestureRecognition:(id)a0;
- (void)_setStatusBarShowsProgress:(BOOL)a0;
- (void)_activateSafariWithCompletion:(id /* block */)a0;
- (void)_handleActivateControlCenterKeyShortcut:(id)a0;
- (void)_retryLaunchTestWithOptions:(id)a0;
- (void)_handleScreenShotShortcut:(id)a0;
- (void)_handleActivateSiriKeyShortcut:(id)a0;
- (void)_handleShowShortcutHUD:(id)a0;
- (void)_handleNavigateWindowInSpaceKeyShortcut:(id)a0;
- (void)removeDisableActiveInterfaceOrientationChangeAssertion:(id)a0 nudgeOrientationIfRemovingLast:(BOOL)a1;
- (void)_handleCommandQ:(id)a0;
- (void)_runHomeScreenIconPullToSpotlightWithTestName:(id)a0 cold:(BOOL)a1;
- (long long)_interfaceOrientationForRawOrientation:(long long)a0 validOrientation:(long long)a1 ignoringHomeScreenRotationStyle:(BOOL)a2;
- (void)_resetSmartCoverHIDUIAssertionForReason:(id)a0;
- (void)_handleShiftCommandTab:(id)a0;
- (void)_startBulletinBoardServer;
- (void)_legacy_noteInterfaceOrientationChanged:(long long)a0 duration:(double)a1 updateMirroredDisplays:(BOOL)a2 force:(BOOL)a3 logMessage:(id)a4;
- (void)_runDashBoardRotateTodayViewPage;
- (void)failedTest:(id)a0 withResults:(id)a1;
- (void)_performBackAndForthPanOnScreenWithIterations:(unsigned long long)a0 duration:(double)a1 completion:(id /* block */)a2;
- (void)_runHomeScreenIconPullToSpotlightDismiss;
- (void)_screenshotWindowWasDismissed;
- (BOOL)_isStatusBarEffectivelyHiddenForContentOverlayInsetsForWindow:(id)a0;
- (id)_leadingNotificationRequest;
- (void)_accessibilityDeactivationAnimationWillBegin;
- (void)_cleanUpLaunchTestState;
- (BOOL)_accessibilityShouldAllowIconLaunch;
- (void)_runLockScreenScrollNotificationsTestWithOptions:(id)a0;
- (void)noteInstalledWebClipsDidChange;
- (void)scrollViewDidScroll:(id)a0;
- (BOOL)isNowPlayingAppPlaying;
- (void)_handleBrightnessKeyCommand:(id)a0 keyDown:(BOOL)a1;
- (BOOL)_handleGameControllerEventHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)_headsetButtonUp:(struct __IOHIDEvent { } *)a0;
- (void)_performPanWithComposer:(id)a0 startLocation:(struct CGPoint { double x0; double x1; })a1 endLocation:(struct CGPoint { double x0; double x1; })a2 duration:(double)a3;
- (void)_runAppSwitcherBringupTestOverApp:(BOOL)a0 rotated:(BOOL)a1 completion:(id /* block */)a2;
- (void)_setDeviceOrientation:(long long)a0 animated:(BOOL)a1 logMessage:(id)a2;
- (void)_significantTimeDidChange:(BOOL)a0;
- (void)_publishFakeThreadedLockScreenNotificationsWithCount:(unsigned long long)a0 uniqueThreadCount:(unsigned long long)a1 completion:(id /* block */)a2;
- (void)_setStatusBarOrientation:(long long)a0 animated:(BOOL)a1 logMessage:(id)a2;
- (void)scrollViewDidEndScrollingAnimation:(id)a0;
- (void)noteInterfaceOrientationChanged:(long long)a0 logMessage:(id)a1;
- (void)_handleBrightnessKeyCommandDownShortcut:(id)a0;
- (void)_broadcastStateCaptureToConnectedRemotePeers:(id)a0;
- (void)_deviceOrientationChanged:(long long)a0;
- (void)_runDashBoardScrollToRightPageTestWithBlur:(BOOL)a0;
- (void)_runTodayViewEditingScrollWidgetsTestWithOptions:(id)a0;
- (void)popTransientActiveInterfaceOrientationForReason:(id)a0;
- (void)beginInteractiveSpotlightTransientOverlayPresentationWithValidator:(id /* block */)a0 beginHandler:(id /* block */)a1;
- (BOOL)isShowingHomescreen;
- (void)toggleSearchFromBreadcrumbSource:(BOOL)a0 withWillBeginHandler:(id /* block */)a1 completionHandler:(id /* block */)a2;
- (void)_dismissSpotlightWithHomeButtonEvent;
- (void)_handleAddWindowToSetCommand:(id)a0;
- (BOOL)application:(id)a0 handleOpenURL:(id)a1;
- (void)_performDelayedHeadsetClickTimeout;
- (void)_runScrunchToHomeTest;
- (BOOL)isKeybagRefetchTransactionActive;
- (void)_endRequiringSpotlightTransientOverlayForReason:(id)a0;
- (void)handleKeyHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)noteSceneLayoutDidUpdateOnDisplayWithIdentity:(id)a0;
- (void)_handleNextSwitcherSpaceKeyShortcut:(id)a0;
- (BOOL)menuButtonInterceptAppEnabledForever;
- (void)noteCaseHardwarePresent;
- (long long)remoteTransientOverlaySessionManager:(id)a0 activeWallpaperVariantForSession:(id)a1;
- (void)noteKeybagRefetchTransactionIsActive:(BOOL)a0;
- (void)registerAnalyticsEventHandlers;
- (void)_handleMakeFullscreenKeyShortcut:(id)a0;
- (void)_runToggleSearchTest;
- (id)activeDisplayWindowScene;
- (BOOL)canPerformAction:(SEL)a0 withSender:(id)a1;
- (void)_rotateFromPortrait:(id /* block */)a0 toLandscape:(id /* block */)a1 andFromLandscape:(id /* block */)a2 andBackToPortrait:(id /* block */)a3;
- (void)_runArcSwipeTestFromHomeScreen:(BOOL)a0;
- (void)removeDisplayConnectionObserver;
- (id)_combinedListViewController;
- (void)handleLockButtonPressFromTransientOverlayViewController:(id)a0;
- (void)_performFiveFingerScrunchWithComposer:(id)a0 scrunchProgress:(double)a1 duration:(double)a2 withContinuationBlock:(id /* block */)a3;
- (id)_flickTimingFunction;
- (void)_runTodayViewPullDownToSpotlight;
- (BOOL)caseIsEnabledAndLatched;
- (void)handleDeferredUILockForInCallPresentation;
- (void)_waitForCloudCriticalData;
- (void)_turnScreenOnAndUnlockWithCompletion:(id /* block */)a0;
- (void)_handleKeyDownEvent_DoNotDisturb:(struct __IOHIDEvent { } *)a0 modifiers:(long long)a1;
- (void)_performRightToLeftPanGestureOnScreenWithDuration:(double)a0 completion:(id /* block */)a1;
- (BOOL)_areKeyboardHUDsEnabled;
- (void)_pauseWithComposer:(id)a0 locations:(struct CGPoint { double x0; double x1; } *)a1 touchCount:(unsigned long long)a2;
- (void)_runSwipeAndPauseForSwitcherTestFromHomeScreen:(BOOL)a0 completion:(id /* block */)a1;
- (void)_handleKeyDownEvent_KeyboardBrightnessChange:(struct __IOHIDEvent { } *)a0 modifiers:(long long)a1;
- (id)_accessibilityFrontMostApplication;
- (void)spotlightTransientOverlayViewControllerDidPresent:(id)a0;
- (void)_runScrollAppSwitcherTest:(id)a0 overApp:(BOOL)a1 completion:(id /* block */)a2;
- (void)_handleHomeScreenNavigateOut:(id)a0;
- (void)addDisableActiveInterfaceOrientationChangeAssertion:(id)a0;
- (BOOL)__handleHIDEvent:(struct __IOHIDEvent { } *)a0 withUIEvent:(id)a1;
- (void)_midnightPassed;
- (void)interactiveScreenshotGestureManager:(id)a0 requestsScreenshotWithOptionsCollection:(id)a1 presentationOptions:(id)a2;
- (BOOL)_isGlobeKeyShortcutHUDEnabled;
- (void)_runMedusaSplitViewSuspendTest:(id)a0 withOptions:(id)a1;
- (void)_simulateHomeButtonPressWithCompletion:(id /* block */)a0;
- (BOOL)homeScreenRotationStyleWantsUIKitRotation;
- (void)_prepareBacklightServices;
- (void)_completeStartupAfterMainSceneConnect:(id)a0;
- (BOOL)_frontBoardWantsKeyboardSceneLayerOrderedIntoScene;
- (void)setWantsVolumeButtonEvents:(BOOL)a0;
- (void)_handleEndOfScrollingTest;
- (void)_performOrbAtPoint:(struct CGPoint { double x0; double x1; })a0 fromView:(id)a1 withCompletion:(id /* block */)a2;
- (void)_runDoSiDoTest;
- (void)_handleSplitHomeScreenShortcut:(id)a0;
- (long long)_currentNonFlatDeviceOrientation;
- (void)_rotateView:(id)a0 toOrientation:(long long)a1;
- (void)_handleBrightnessKeyCommandUpShortcut:(id)a0;
- (void)_ringerChanged:(struct __IOHIDEvent { } *)a0;
- (void)setExpectsFaceContact:(BOOL)a0;
- (id)_mainDisplayWindowScene;
- (void)_handleMakeSplitRightKeyShortcut:(id)a0;
- (BOOL)_accessibilityObjectWithinProximity;
- (void)_simulateLockButtonPress;
- (void)_runAppSwitcherDismissTestOverApp:(BOOL)a0 rotated:(BOOL)a1 completion:(id /* block */)a2;
- (void)buildMenuWithBuilder:(id)a0;
- (BOOL)_accessibilityShouldAllowAppLaunch;
- (void)_launchFullscreenApplication:(id)a0 withLaunchResult:(id /* block */)a1 transactionCompletion:(id /* block */)a2;
- (void)_performMultiFingerDragWithComposer:(id)a0 startLocations:(struct CGPoint { double x0; double x1; } *)a1 endLocations:(struct CGPoint { double x0; double x1; } *)a2 touchCount:(unsigned long long)a3 duration:(double)a4 timingFunction:(id)a5 startWithTouchDown:(BOOL)a6 intermediateTransformer:(id /* block */)a7 completion:(id /* block */)a8;
- (BOOL)_accessibilityIsSystemGestureActive;
- (void)_handleDeviceOrientationChangedHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)_handleNavigateFloatingAppKeyShortcut:(id)a0;
- (id)statusBarForEmbeddedDisplay;
- (void)_performExpandingCoalescedBundleForNotificationRequest:(id)a0 withCompletion:(id /* block */)a1;
- (void)restartManager:(id)a0 willRestartWithTransitionRequest:(id)a1;
- (double)_accessibilityDeactivationAnimationStartDelay;
- (BOOL)_handleNavigationSwipeHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)_runHomeScreenSwipeLeftToTodayView;
- (void)setTypingActive:(BOOL)a0 auditToken:(struct { unsigned int x0[8]; })a1;
- (void)_runExitPageHiding;
- (void)_handleHIDEvent:(struct __IOHIDEvent { } *)a0;
- (BOOL)allowCaseLatchLockAndUnlock;
- (void)_runSwipeUpHomeToAutoPIPTest;
- (void)_performRestackingExpandedBundleForNotificationRequest:(id)a0 withCompletion:(id /* block */)a1;
- (void)_runTestWithVariableFinish:(id /* block */)a0 options:(id)a1 completion:(id /* block */)a2;
- (void)addActiveOrientationObserver:(id)a0;
- (long long)interfaceOrientationForCurrentDeviceOrientation:(BOOL)a0;
- (id)allowedRemotePeerDisplayNames;
- (void)stateForStateType:(unsigned long long)a0 withCompletionHandler:(id /* block */)a1;
- (id)keyCommands;
- (BOOL)_handleCoverGestureHIDEvent:(struct __IOHIDEvent { } *)a0;
- (void)startedTest:(id)a0;
- (void)requestDeviceUnlock;
- (void)_handleMoveToOtherDisplayKeyShortcut:(id)a0;
- (id)_installSwitcherModelForSwitcherTests;
- (void)setupMidnightTimer;
- (void)endIgnoringInteractionEvents;
- (long long)alertInterfaceOrientation;
- (void)_setupNotificationListTest;
- (void)_runDashBoardDismissTestFromPageIndex:(unsigned long long)a0 showPasscodeView:(BOOL)a1;
- (void)setStatusBarOrientation:(long long)a0 forEmbeddedDisplayAnimated:(BOOL)a1;
- (void)languageChanged;
- (void)showAlertForUnhandledURL:(id)a0 error:(int)a1;
- (void)_updateRingerState:(int)a0 withVisuals:(BOOL)a1 updatePreferenceRegister:(BOOL)a2;
- (void)_preheatScreenshotsWithPresentationOptions:(id)a0;
- (void)_runNotificationCoalescingExpandingScrollingTestWithOptions:(id)a0;
- (void)_runAppSearchDismiss;
- (void)setAppRegisteredForVolumeEvents:(id)a0 isActive:(BOOL)a1;
- (void)beginIgnoringInteractionEventsForReason:(id)a0;
- (void)restartManagerWillReboot:(id)a0;
- (BOOL)_accessibilitySystemGesturesDisabledByAccessibility;
- (double)_accessibilityActivationAnimationStartDelay;
- (void)_runDashBoardRotateMainPage;
- (struct CGPoint { double x0; double x1; })_locationInScreenReferenceSpaceForLocation:(struct CGPoint { double x0; double x1; })a0 inOrientation:(long long)a1;
- (void)_handleHomeScreenNavigateLeading:(id)a0;
- (void)_runArcSwipeMultipleAppsTestWithForegroundApp:(id)a0 forcedOrientation:(long long)a1;
- (void)_performArcSwipeWithComposer:(id)a0;
- (void)_toggleSearch;
- (void)removeNowLocatingApp:(id)a0;
- (void)_handleToggleFloatingAppVisibilityKeyShortcut:(id)a0;
- (void)_turnScreenOnAndAuthenticateWithCompletion:(id /* block */)a0;
- (void)_beginRequiringSpotlightTransientOverlayForReason:(id)a0;
- (void)_updateHardwareKeyboardAttached;
- (void)_runMedusaMoveFloatingApplicationTest:(id)a0 withOptions:(id)a1;
- (id)_windowScene;
- (void)_setupMainWorkspaceForMedusaTestWithOptions:(id)a0 completion:(id /* block */)a1;
- (BOOL)isDeterminingBootTransition;
- (void)_dumpLoggingStateCaptureWithCompletion:(id /* block */)a0;
- (void)_setAmbiguousControlCenterActivationMargin:(double)a0;
- (void)_runEnterPageHiding;
- (void)_resetToHomeScreen:(id /* block */)a0;
- (id)_switcherController;
- (void)_significantTimeChangeNotificationReceived;
- (id)menuButtonInterceptApp;
- (id)modalAlertPresentationCoordinatorRequestedForegroundScenes:(id)a0;
- (void)_runScrunchToAppSwitcherTest;
- (void)endLaunchTest;
- (void)unregisterRemoteAlertSceneViewProvider:(id)a0;
- (void)_runTapContinuityBannerInSwitcherTestWithCompletion:(id /* block */)a0;
- (void)_performNotificationPublishingWithCount:(unsigned long long)a0 uniqueThreadCount:(unsigned long long)a1 withCompletion:(id /* block */)a2;
- (id)_allWindowInfo:(long long)a0;
- (void)startResumeTestNamed:(id)a0 options:(id)a1;
- (void)_continueRunningScrollAppSwitcherTest:(id)a0 runColdTest:(BOOL)a1 completion:(id /* block */)a2;
- (void)_deactivateReachability;
- (void)_runAutoPIPWithGestureTest:(id /* block */)a0;
- (id)_dashBoardControllerForTesting;
- (void)_prepareToRunSwitcherGestureTestsFromHomeScreen:(BOOL)a0 withCompletion:(id /* block */)a1;
- (void)_runDashBoardDismissFromTodayViewWhileAuthenticatedTest;
- (void)_runMedusaSplitViewResizeTest:(id)a0 withOptions:(id)a1;
- (id)_dumpStateCaptureData;
- (BOOL)_statusBarOrientationFollowsWindow:(id)a0;
- (void)_accessibilitySetSystemGesturesDisabledByAccessibility:(BOOL)a0;
- (void)handleDeferredUILockForInCallPresentationAnimateIfNeeded:(BOOL)a0 inCallPresentationActive:(BOOL)a1;
- (BOOL)isHardwareKeyboardAttached;
- (void)_handleLockShortcut:(id)a0;
- (void)_nowPlayingAppDidChangeNotification:(id)a0;
- (void)_runNotificationCoalescingRestackingFromBottomTestWithOptions:(id)a0;
- (void)applicationOpenURL:(id)a0 withApplication:(id)a1 animating:(BOOL)a2 activationSettings:(id)a3 origin:(id)a4 notifyLSOnFailure:(BOOL)a5 withResult:(id /* block */)a6;
- (void)_runTodayViewFocusSearchFieldToSpotlight;
- (void)_runScrunchHomeToAutoPIPTest;
- (void)setSuspensionAnimationDelay:(double)a0;
- (void)_application:(id)a0 statusBarTouchesEnded:(id)a1;
- (void)_handleMakeSplitLeftKeyShortcut:(id)a0;
- (void)_smartCoverMightHaveOpened:(struct __IOHIDEvent { } *)a0;
- (BOOL)launchApplicationWithIdentifier:(id)a0 suspended:(BOOL)a1;
- (BOOL)_hasForegroundAppWithPID:(int)a0;
- (void)_handleDeviceOrientationChangedEvent:(struct __GSEvent { } *)a0;
- (void)_runScrunchAndSwipeTest;
- (BOOL)remoteTransientOverlaySessionManager:(id)a0 shouldActivateOverlayWithContext:(id)a1 forSession:(id)a2;
- (void)restartManagerExitImminent:(id)a0;
- (BOOL)expectsFaceContact;
- (void)_runDashboardTodayViewScrollWidgetsTestWithOptions:(id)a0;

@end
