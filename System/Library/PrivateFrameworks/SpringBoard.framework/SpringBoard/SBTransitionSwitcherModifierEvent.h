@class NSUUID, SBDisplayItem, NSString, SBBannerUnfurlSourceContext, SBAppLayout, NSSet, NSDictionary, SBTransitionSwitcherModifierMoveDisplaysContext, NSArray, NSMutableDictionary, SBSwitcherShelf;

@interface SBTransitionSwitcherModifierEvent : SBSwitcherModifierEvent {
    NSMutableDictionary *_appLayoutToRemovalContext;
}

@property (nonatomic) BOOL fromAppLayoutWantsExclusiveForeground;
@property (nonatomic) BOOL toAppLayoutWantsExclusiveForeground;
@property (retain, nonatomic) SBAppLayout *fromFloatingAppLayout;
@property (nonatomic) long long fromFloatingConfiguration;
@property (nonatomic) BOOL fromFloatingSwitcherVisible;
@property (retain, nonatomic) SBAppLayout *toFloatingAppLayout;
@property (nonatomic) long long toFloatingConfiguration;
@property (nonatomic) BOOL toFloatingSwitcherVisible;
@property (copy, nonatomic) NSString *fromAppExposeBundleID;
@property (copy, nonatomic) NSString *toAppExposeBundleID;
@property (copy, nonatomic) NSString *ambiguouslyLaunchedBundleIDIfAny;
@property (nonatomic) long long fromPeekConfiguration;
@property (nonatomic) long long toPeekConfiguration;
@property (nonatomic) long long fromSpaceConfiguration;
@property (nonatomic) long long toSpaceConfiguration;
@property (copy, nonatomic) SBBannerUnfurlSourceContext *bannerUnfurlSourceContext;
@property (nonatomic) BOOL prefersCrossfadeTransition;
@property (copy, nonatomic) NSSet *fromDisplayItemsPendingTermination;
@property (retain, nonatomic) SBAppLayout *activatingAppLayout;
@property (nonatomic, getter=isGestureInitiated) BOOL gestureInitiated;
@property (nonatomic, getter=isKeyboardShortcutInitiated) BOOL keyboardShortcutInitiated;
@property (nonatomic, getter=isTopAffordanceInitiated) BOOL topAffordanceInitiated;
@property (nonatomic, getter=isDragAndDropTransition) BOOL dragAndDropTransition;
@property (nonatomic, getter=isBreadcrumbTransition) BOOL breadcrumbTransition;
@property (nonatomic, getter=isMorphToPIPTransition) BOOL morphToPIPTransition;
@property (nonatomic, getter=isMorphFromPIPTransition) BOOL morphFromPIPTransition;
@property (nonatomic) long long morphingPIPLayoutRole;
@property (nonatomic, getter=isZoomFromSystemApertureTransition) BOOL zoomFromSystemApertureTransition;
@property (nonatomic, getter=isContinuityTransition) BOOL continuityTransition;
@property (nonatomic, getter=isBannerUnfurlTransition) BOOL bannerUnfurlTransition;
@property (nonatomic, getter=isIconZoomDisabled) BOOL iconZoomDisabled;
@property (nonatomic, getter=isSpotlightTransition) BOOL spotlightTransition;
@property (nonatomic, getter=isShelfTransition) BOOL shelfTransition;
@property (nonatomic) long long dosidoTransitionDirection;
@property (nonatomic, getter=isShelfRequestTransition) BOOL shelfRequestTransition;
@property (nonatomic, getter=isMorphFromInAppView) BOOL morphFromInAppView;
@property (nonatomic, getter=isQuickActionTransition) BOOL quickActionTransition;
@property (nonatomic, getter=isNewSceneTransition) BOOL newSceneTransition;
@property (nonatomic, getter=isMoveDisplaysTransition) BOOL moveDisplaysTransition;
@property (nonatomic, getter=isContinuousExposeConfigurationChangeEvent) BOOL continuousExposeConfigurationChangeEvent;
@property (nonatomic, getter=isiPadOSWindowingModeChangeEvent, setter=setiPadOSWindowingModeChangeEvent:) BOOL iPadOSWindowingModeChangeEvent;
@property (copy, nonatomic) NSDictionary *fromDisplayItemLayoutAttributesMap;
@property (copy, nonatomic) NSDictionary *toDisplayItemLayoutAttributesMap;
@property (retain, nonatomic) SBTransitionSwitcherModifierMoveDisplaysContext *moveDisplaysContext;
@property (copy, nonatomic) SBDisplayItem *movingDisplayItem;
@property (nonatomic) struct CGSize { double width; double height; } fromSizeOfMovingDisplayItem;
@property (nonatomic) struct CGPoint { double x; double y; } fromCenterOfMovingDisplayItem;
@property (nonatomic) struct CGSize { double width; double height; } toSizeOfMovingDisplayItem;
@property (nonatomic) struct CGPoint { double x; double y; } toCenterOfMovingDisplayItem;
@property (nonatomic) unsigned long long phase;
@property (nonatomic, getter=isAnimated) BOOL animated;
@property (retain, nonatomic) SBAppLayout *fromAppLayout;
@property (nonatomic) long long fromEnvironmentMode;
@property (retain, nonatomic) SBAppLayout *toAppLayout;
@property (nonatomic) long long toEnvironmentMode;
@property (nonatomic) long long fromInterfaceOrientation;
@property (nonatomic) long long toInterfaceOrientation;
@property (nonatomic) long long fromWindowPickerRole;
@property (nonatomic) long long toWindowPickerRole;
@property (readonly, nonatomic) NSUUID *transitionID;
@property (readonly, copy, nonatomic) NSArray *appLayoutsWithRemovalContexts;
@property (readonly, nonatomic) SBSwitcherShelf *fromShelf;
@property (readonly, nonatomic) SBSwitcherShelf *toShelf;
@property (nonatomic, getter=isCommandTabTransition) BOOL commandTabTransition;
@property (nonatomic, getter=isLaunchingFromDockTransition) BOOL launchingFromDockTransition;

- (BOOL)isExitingSlideOverPeekEvent;
- (BOOL)isMainPulseEvent;
- (BOOL)isExitingSlideOverPeekToHomeScreenEvent;
- (id)descriptionBuilderWithMultilinePrefix:(id)a0;
- (BOOL)isSlideOverToFullScreenEvent;
- (BOOL)isExitingAnyPeekEvent;
- (BOOL)isExitingSplitViewPeekToAppEvent;
- (BOOL)isSlideOverToCenterWindowEvent;
- (id)removalContextForAppLayout:(id)a0;
- (BOOL)isExitingSlideOverPeekToAppEvent;
- (BOOL)_isEnteringPageCenterWindowEvent;
- (BOOL)isEnteringSplitViewPeekEvent;
- (BOOL)isCenterWindowRemovalEvent;
- (BOOL)isCenterWindowZoomingUpFromShelfEvent;
- (BOOL)isFullScreenToSplitViewEvent;
- (BOOL)isEnteringAnyPeekEvent;
- (BOOL)isSwappingFullScreenAppSidesEvent;
- (BOOL)isExitingSplitViewPeekToHomeScreenEvent;
- (BOOL)isFloatingPulseEvent;
- (BOOL)isPresentingPageCenterWindowEvent;
- (void).cxx_destruct;
- (BOOL)isSplitViewToCenterWindowEvent;
- (BOOL)isCenterWindowToFullScreenEvent;
- (BOOL)isAnySplitViewToOrFromSlideOverEvent;
- (BOOL)isSideToSlideOverEvent;
- (BOOL)isFullScreenToCenterWindowEvent;
- (BOOL)isReplaceCenterWindowWithNewCenterWindowEvent;
- (BOOL)isTransitionEvent;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (BOOL)isSlideOverToPrimaryEvent;
- (id)initWithTransitionID:(id)a0 phase:(unsigned long long)a1 animated:(BOOL)a2;
- (BOOL)isExitingCenterWindowToOtherRoleEvent;
- (BOOL)isSlideOverToSideEvent;
- (BOOL)isExitingSplitViewPeekEvent;
- (BOOL)isSplitViewCrossfadeEvent;
- (BOOL)isExitingCenterWindowEvent;
- (long long)type;
- (BOOL)isCenterWindowToExistingSplitViewEvent;
- (BOOL)isCenterWindowToSlideOverEvent;
- (BOOL)isCenterWindowToNewSplitViewEvent;
- (BOOL)isAnyPulseEvent;
- (BOOL)isEnteringSlideOverPeekEvent;
- (void)setRemovalContext:(id)a0 forAppLayout:(id)a1;
- (BOOL)isPrimaryToSlideOverEvent;
- (id)debugPredicateSummary;

@end
