@class SGSuggestHistory, SGJournal, SGKeyValueCacheManager, NSDictionary, NSObject, SGSGtoCNContactsCacheUpdateAdapter, NSMutableArray, SGMIFeatureStore, SGDatabaseJournal, SGBloomFilter, NSString, _PASLock, SGSpotlightContactsAdapter, NSSet, SGSqliteDatabase, NSMutableOrderedSet, SGSqliteDatabaseSharedLock, SGCoalescingDropBox, SGEnrichmentWritebackAdapter;
@protocol OS_dispatch_queue;

@interface SGSqlEntityStore : NSObject <CSSearchableIndexDelegate> {
    SGSqliteDatabase *_db;
    SGSqliteDatabaseSharedLock *_sharedWriteLock;
    SGSqliteDatabase *_snippetDb;
    SGDatabaseJournal *_snippetsJournal;
    SGMIFeatureStore *_sgmiFeatureStore;
    SGSuggestHistory *_history;
    _Atomic BOOL _identityStoreDirty;
    NSDictionary *_entityMigrations;
    NSDictionary *_snippetsMigrations;
    unsigned int _entityVersion;
    unsigned int _snippetsVersion;
    BOOL _entityMigrationRequiresMergeBlobUpdate;
    unsigned long long _lostMessageOverflow;
    NSMutableArray *_deallocNotifications;
    struct atomic_flag { _Atomic BOOL _Value; } _isClosed;
    SGJournal *_journal;
    unsigned long long _parentMessagesLimit;
    unsigned long long _serializedContactsLimit;
    _PASLock *_recentlyDeletedEmailKeys;
    _Atomic int _spotlightReindexCount;
    NSObject<OS_dispatch_queue> *_spotlightReindexQueue;
    NSSet *_prematchedContactIdentifiers;
    NSObject<OS_dispatch_queue> *_precomputationQueue;
    SGBloomFilter *_messageRecipients;
    id /* block */ _crLookup;
    NSString *_snippetDbPath;
    id _lockStateNotificationRegistrationToken;
    BOOL _executeJournals;
    NSMutableOrderedSet *_otherDetailsWithNoContact;
    SGCoalescingDropBox *_cnToSGContactsCachePendingUpdateRequests;
    SGEnrichmentWritebackAdapter *_enrichmentWritebackAdapter;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL isEphemeral;
@property (readonly, nonatomic) BOOL waitForMigrations;
@property (readonly) SGSpotlightContactsAdapter *spotlightContactsAdapter;
@property (readonly) SGSGtoCNContactsCacheUpdateAdapter *sgToCNContactsCacheUpdateAdapter;
@property (readonly) SGKeyValueCacheManager *kvCacheManager;

+ (id)_fieldValuesClassWhitelist;
+ (id)sqlStoreInMemory;
+ (id)storeWithDefaultLocationAndExecuteJournals:(BOOL)a0;
+ (id)_deserializeDateComponents:(id)a0;
+ (id)journalNameForDbPath:(id)a0;
+ (id)likePrefix:(id)a0;
+ (id)_cachedVIPEmailAddresses;
+ (id)escapeLike:(id)a0;
+ (BOOL)contactContainsEphemeralId:(id)a0;
+ (void)deletePreparedSqlStoreInMemory;
+ (id)globPrefix:(id)a0;
+ (void)releaseInstanceAndWaitForDealloc:(id *)a0;
+ (id)cnContactIdentifiersForContact:(id)a0;
+ (id)defaultHarvestStore;
+ (BOOL)pathHasFutureDbSchema:(id)a0;
+ (void)setCachedVIPEmailAddresses:(id)a0;
+ (void)prepareSqlStoreInMemoryByClearingExistingStore:(id)a0;
+ (BOOL)isEphemeralIdentifier:(long long)a0;
+ (id)sqlStoreWithEntityDbPath:(id)a0 snippetDbPath:(id)a1 isEphemeral:(BOOL)a2 executeJournals:(BOOL)a3;
+ (id)_recreateCorruptDatabase:(id)a0 sharedLock:(id)a1 withProtection:(BOOL)a2;
+ (void)prepareSqlStoreInMemory;
+ (id)sqlStoreWithEntityDbPathNoMigrate:(id)a0 snippetDbPath:(id)a1 isEphemeral:(BOOL)a2 executeJournals:(BOOL)a3;
+ (id)defaultPath;
+ (id)defaultStore;
+ (void)clearMigrationCompletedForPaths;
+ (void)addPathToFutureDbSchemas:(id)a0;
+ (id)sqlStoreWithEntityDbPath:(id)a0 snippetDbPath:(id)a1 isEphemeral:(BOOL)a2 sharedLock:(id)a3 executeJournals:(BOOL)a4;
+ (id)_initializeDatabaseNolock:(id)a0 withProtection:(BOOL)a1 sharedLock:(id)a2 newDatabaseCreated:(BOOL *)a3;
+ (id)cnContactIdentifiersSpotlightQueryStringForContact:(id)a0;
+ (BOOL)canStoreEventsForAccountType:(id)a0;
+ (id)defaultSnippetPath;
+ (id)defaultPathCreatingSuggestionsDirectoryIfNeeded:(BOOL)a0;
+ (id)_serializeDate:(id)a0;
+ (id)initializeDatabase:(id)a0 withProtection:(BOOL)a1 sharedLock:(id)a2 newDatabaseCreated:(BOOL *)a3;

- (void)selectAuthoritativeDetailsForContactWithId:(long long)a0;
- (long long)writeEnrichment:(id)a0;
- (unsigned long long)entityCount;
- (unsigned long long)storeReimportRequest:(id)a0;
- (id)allPseudoContacts;
- (void)analyzeDatabase;
- (id)historyForTesting;
- (id)journal;
- (void)writeEmailVerificationResultForEmailWithKey:(id)a0 eventEntities:(id)a1;
- (void)searchableIndex:(id)a0 reindexSearchableItemsWithIdentifiers:(id)a1 acknowledgementHandler:(id /* block */)a2;
- (BOOL)migrationNeeded;
- (void)setHasFullSync;
- (id)computeBlobs;
- (void)closeDatabases;
- (long long)unmigrateDatabases;
- (BOOL)rejectContactByRecordID:(id)a0 error:(id *)a1;
- (id)sortedSaliencyResultsRestrictedToMailboxTypes:(id)a0 mailboxIds:(id)a1 receivedOnOrAfter:(id)a2 ascending:(BOOL)a3 limit:(unsigned long long)a4;
- (id)displayableEntities:(id)a0;
- (void)analyzeMergeBlobs:(id)a0;
- (id)reminderEntityIdForDuplicateKey:(id)a0;
- (void)reportDbStats;
- (BOOL)rebuildIdentityTables;
- (id)dbStats;
- (unsigned long long)numberOfRowsInTable:(id)a0;
- (long long)commitTag:(id)a0;
- (long long)migrateDatabases;
- (long long)migrate;
- (long long)skipFromZeroSchema;
- (void)vacuum;
- (void)markLostSpotlightReferencesWithBundleIdentifier:(id)a0 uniqueIdentifiers:(id)a1;
- (long long)migrateToVersion:(unsigned long long)a0;
- (long long)migration_deleteLegacyMessages;
- (id)_queryForAllContactsWithLimit;
- (void)searchableIndex:(id)a0 reindexAllSearchableItemsWithAcknowledgementHandler:(id /* block */)a1;
- (struct SGUnixTimestamp_ { double x0; })lastSeenTimestampForKey:(id)a0;
- (BOOL)realtimeContactIsSignificantOrSignificanceIsDisabled:(id)a0;
- (void)clearCaches;
- (void)clearSaliencyTable;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x0; })a0 endingAt:(struct SGUnixTimestamp_ { double x0; })a1 prefix:(id)a2 limitTo:(unsigned long long)a3 options:(unsigned int)a4;
- (void)updateLanguageForFTSTablesToLanguage:(id)a0;
- (void)writeCNContactMatchForContact:(id)a0 withMatches:(id)a1 andMaxEntityId:(long long)a2;
- (void)writeIdentityBlobs:(id)a0 forceRewrite:(BOOL)a1;
- (void)insertEventTagsAndLocations:(id)a0 primaryKey:(long long)a1;
- (void)markReimportItemsAsSeenByReceiverWithBundleId:(id)a0 items:(id)a1;
- (long long)migration_deleteInteractions;
- (id)suggestContactMatchesWithContact:(id)a0 limitTo:(unsigned long long)a1;
- (id)loadEntityByRecordId:(id)a0;
- (void)deleteNaiveBayesModelForProbabilityFeatureName:(long long)a0;
- (id)initForMigratorTestWithEntityDb:(id)a0 snippetDb:(id)a1;
- (BOOL)_renameTable:(id)a0 to:(id)a1;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x0; })a0 endingAt:(struct SGUnixTimestamp_ { double x0; })a1 limitTo:(unsigned long long)a2 additionalWhereClause:(id)a3 options:(unsigned int)a4 onPrep:(id /* block */)a5;
- (id)loadContactDetailsForRecordId:(id)a0 type:(unsigned long long)a1;
- (long long)migration_separateMessageSnippets;
- (void)setSerializedContactsLimit:(unsigned long long)a0;
- (id)sgmiFeatureStore;
- (id)_loadMessageByKey:(id)a0;
- (void)setNSDate:(id)a0 forKey:(id)a1;
- (void)_contactIdsForContactDetailMatches:(id)a0 detailContactIds:(id)a1 socialProfileContactIds:(id)a2;
- (void)clearMasterEntityCache;
- (id)getReminderWithRecordId:(id)a0;
- (void)logConfirmPercentAfterContactRejection;
- (id)loadEventByRecordId:(id)a0;
- (void)setCRLookupForTesting:(id /* block */)a0;
- (BOOL)hasSpotlightReferenceForBundleIdentifier:(id)a0 uniqueIdentifier:(id)a1;
- (BOOL)mayHaveSentMessageToHandle:(id)a0;
- (id)allContactsWithSnippets:(BOOL)a0 limitTo:(unsigned long long)a1;
- (id)reminderSourceKeyForDuplicateKey:(id)a0;
- (id)storageContactByMasterEntityId:(long long)a0 withSnippets:(BOOL)a1;
- (id)prematchedContactIdentifiers;
- (id)unmergedCandidatesLimitedTo:(int)a0;
- (void)_enumerateContactsForMasterEntityIds:(id)a0 withSnippets:(BOOL)a1 usingBlock:(id /* block */)a2;
- (BOOL)confirmRealtimeEvent:(id)a0 error:(id *)a1;
- (BOOL)entityWantsFullDownload:(id)a0;
- (id)messageIdForBundleIdentifier:(id)a0 uniqueIdentifier:(id)a1;
- (void)applyCappingPolicy:(id)a0 byDiscardingTokensCounts:(id)a1 withMargin:(float)a2;
- (id)serializedEntityIds;
- (BOOL)contactIsSignificant:(id)a0;
- (void)deleteEntitiesByDuplicateKey:(id)a0 emitChangeNotifications:(BOOL)a1;
- (void)_deleteOrphanedItems;
- (void)_markIdentityStoreDirty;
- (id)eventFromSqlResult:(struct sqlite3_stmt { } *)a0;
- (void)_writeEventEntitiesToJournal:(id)a0;
- (long long)writeEntity:(id)a0;
- (id)_journalEntryFromEntity:(id)a0;
- (unsigned long long)commitExtractionInfo:(id)a0;
- (id)selectEntityQuery:(id)a0;
- (void)setLostMessageOverflow:(unsigned long long)a0;
- (BOOL)confirmContactByRecordID:(id)a0 error:(id *)a1;
- (BOOL)performDatabaseCheck;
- (void)initRefreshSuggestionsContactDropBox;
- (void)clearAllTables;
- (void)_linkNamelessPhonesIfAppropriate:(struct graph_t { unsigned int x0; unsigned int x1; struct _vertex_t *x2; } *)a0 nameToVertex:(id)a1 disjointSets:(struct DisjointSetHandle { } *)a2 edges:(id)a3;
- (id)allEntitiesOfType:(long long)a0 limitedTo:(unsigned long long)a1;
- (id)loadReminderByKeyOld:(id)a0;
- (id)selectMigrationQueue;
- (id)suggestContactMatchesByPhoneNumber:(id)a0;
- (id)duplicateKeysFromMailMessageKeys:(id)a0;
- (void)_removeCorruptionMarker;
- (void)writeSerializedContact:(id)a0;
- (id)_contactIdForInteractionContactIdentifierMatch:(id)a0;
- (BOOL)anyEmailAddressIsSignificant:(id)a0;
- (BOOL)databasecheck_IntegrityCheck;
- (BOOL)performIntegrityCheckOnly;
- (void)_deleteEventsByRecordIds:(id)a0;
- (id)duplicateKeysMatchingAnyTag:(id)a0;
- (id)storageContactByRecordId:(id)a0 withSnippets:(BOOL)a1;
- (id)suggestContactMatchesWithFullTextSearch:(id)a0 limitTo:(unsigned long long)a1;
- (void)clearChangeHistory:(id)a0;
- (id)cnContactMatchesForRecordId:(id)a0 found:(BOOL *)a1;
- (void)_deltaSyncContactsWithChangeHistory:(id)a0;
- (id)allContactsWithEntityType:(unsigned long long)a0;
- (void)markMailIntelligenceStagedLogsAsLoggedAndClearLogPayloadForMessageId:(id)a0;
- (void)removeStringFromNoContactsCache:(id)a0;
- (id)snippetsDbHandleForTesting;
- (long long)updateSaliency:(long long)a0 saliency:(id)a1;
- (long long)migration_separateMessageEntities;
- (BOOL)registerAndLinkIdentity:(id)a0 recordId:(id)a1 phones:(id)a2 socialProfiles:(id)a3 email:(id)a4 curated:(BOOL)a5 isSent:(BOOL)a6;
- (BOOL)_prepareToCopyFrom:(id)a0 toNewTableNamed:(id)a1;
- (id)entityFromSqlResult:(struct sqlite3_stmt { } *)a0 withSnippets:(BOOL)a1;
- (BOOL)registerAndLinkIdentity:(id)a0 recordId:(id)a1 phones:(id)a2 socialProfiles:(id)a3 email:(id)a4 curated:(BOOL)a5;
- (long long)insertEvent:(id)a0;
- (BOOL)_analyzeMergeBlobsIncremental:(id)a0;
- (BOOL)deleteURLsFromBundleIdentifier:(id)a0 documentIdentifiers:(id)a1;
- (void)storeReimportItems:(id)a0 requestId:(unsigned long long)a1;
- (void)writeInteractionEventEntities:(id)a0;
- (id)_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:(id)a0;
- (BOOL)_processBatchOfSerializedContactJobs;
- (void)_writeFTSTermsForEnrichment:(id)a0 entityId:(long long)a1;
- (void)_writeLabeledBlobs:(id)a0 deletedMasterEntityIds:(id)a1;
- (long long)migration_AddAuthorColumnIfMissing;
- (id)_selectingDomainsForDomainIdentifier:(id)a0;
- (id)childrenFromParentKey:(id)a0;
- (void)setDoubleNSNumber:(id)a0 forKey:(id)a1;
- (void)_deleteContactDetailsByRecordIds:(id)a0;
- (long long)configureMigratorThenMigrateToVersion:(unsigned long long)a0;
- (id)loadEventsWithInteractionIdentifiers:(id)a0 fromBundleIdentifier:(id)a1;
- (id)loadInterdicts;
- (void)link:(id)a0 to:(id)a1 type:(unsigned int)a2 strength:(double)a3;
- (id)initForDbStatsOnlyWithError:(id *)a0;
- (id)suggestContactsWithPrefix:(id)a0 limitTo:(unsigned long long)a1;
- (id)_contactsForMasterEntityIds:(id)a0 withSnippets:(BOOL)a1;
- (id)getInt64NSNumberForKey:(id)a0;
- (void)deleteInteractionsWithBundleId:(id)a0;
- (void)_linkNamelessEmailsIfAppropriate:(struct graph_t { unsigned int x0; unsigned int x1; struct _vertex_t *x2; } *)a0 nameToVertex:(id)a1 disjointSets:(struct DisjointSetHandle { } *)a2 edges:(id)a3;
- (void)updateCNContactMatches:(id)a0;
- (void)pruneNLEventEntitiesOlderThan:(struct SGUnixTimestamp_ { double x0; })a0;
- (id)_makeBlobsFromConnectedComponents:(id)a0 edges:(id)a1;
- (id)_matchableUTF8TokenRangesInMatchExpression:(id)a0;
- (void)prepMigrator;
- (id)suggestContactMatchesByEmailAddress:(id)a0 isMaybe:(BOOL)a1 onlySignificant:(BOOL)a2;
- (long long)migration_deleteInternalExtractionsFromML;
- (long long)runQuery:(id)a0 onDb:(id)a1;
- (void)deleteSpotlightReferencesWithNoBundleIdentifier;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)a0 domainIdentifiers:(id)a1;
- (id)reminderDuplicateKeyForEntityId:(id)a0;
- (id)loadOriginByRecordId:(id)a0;
- (void)_removeSnippetsForEmails:(id)a0;
- (BOOL)deleteURLsFromBundleIdentifier:(id)a0 groupIdentifierGlobs:(id)a1;
- (id)loadAllReimportRequests;
- (id)suggestContactByKey:(id)a0;
- (id)uniqueIdentifierForMessageId:(id)a0;
- (void)_writeEventEntityToJournal:(id)a0;
- (id)loadStorageContactByRecordId:(id)a0 error:(id *)a1;
- (id)loadAllContactDetailsWithWhereClause:(id)a0 onPrep:(id /* block */)a1 dedupeAgainst:(id)a2;
- (id)spotlightUniqueIdentifierForBundleIdentifier:(id)a0 messageId:(id)a1;
- (void)writeSerializedContactPlaceholder:(long long)a0;
- (long long)_writeEnrichmentToDb:(id)a0;
- (void)updateMessages:(id)a0 state:(unsigned long long)a1;
- (void)updateSerializedContacts:(id)a0;
- (void)deleteAllCNContactMatchesForEntityID:(long long)a0;
- (void)confirmFieldValues:(id)a0 forEntity:(id)a1;
- (id)suggestContactMatchesBySocialProfile:(id)a0;
- (id)contactsWithIdentifiers:(id)a0;
- (id)loadStatsCounterWithKey:(id)a0;
- (long long)checkExistsEventForDuplicateKey:(id)a0;
- (id)suggestContactMatchesWithMessagingPrefix:(id)a0 limitTo:(unsigned long long)a1;
- (BOOL)contactIsSignificantOrSignificanceIsDisabled:(id)a0;
- (id)getReminderWithDuplicateKey:(id)a0;
- (void)syncContactsWithStore:(id)a0;
- (void)clearAllTombstonesForSpotlightReferencesIf:(id /* block */)a0;
- (void)clearMailIntelligenceSaliencyDetection;
- (unsigned long long)maxKnownDbVersion;
- (id)reimportRequestDBStats;
- (id)loadUnexecutedReimportRequests;
- (id)nextPendingGeocode;
- (id)batchOf:(unsigned long long)a0 contactsStartingAtEntityId:(unsigned long long)a1;
- (void)deleteEntitiesByDuplicateKey:(id)a0 preserveEventConfirmationHistory:(BOOL)a1 emitChangeNotifications:(BOOL)a2;
- (void)markReimportItemAsSeenByReceiverWithBundleId:(id)a0 uniqueId:(id)a1;
- (void)_deleteOldInteractionContactDetails:(id)a0 currentIdentifiers:(id)a1;
- (void)_dumpTable:(id)a0 columns:(id)a1 limitTo:(int)a2;
- (void)incrementInt64NSNumber:(id)a0 forKey:(id)a1;
- (BOOL)realtimeContactIsSignificant:(id)a0;
- (long long)writeEntity:(id)a0 withSpotlightReferenceForBundleIdentifier:(id)a1 uniqueIdentifier:(id)a2 domainIdentifier:(id)a3;
- (void)pruneMailIntelligenceOlderThanOneYearWithSuspensionHandler:(id /* block */)a0;
- (id)duplicateKeysMatchingAnyEventHash:(id)a0;
- (void)clearNoContactsCache;
- (id)loadExtractionInfoForPrimaryKey:(long long)a0;
- (id)loadSourceKeyByRecordId:(id)a0;
- (id)_computeBlobsRaw:(id *)a0;
- (BOOL)mayHaveSentMessageToEmail:(id)a0;
- (void)_slowCopyFromTable:(id)a0 toTable:(id)a1 startingAtEntityId:(unsigned long long)a2;
- (void)_trimSerializedContacts;
- (id)normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:(id)a0;
- (void)registerSentTextMessage:(id)a0;
- (id)sortedUnsubscriptionOpportunitiesForField:(long long)a0 minCount:(unsigned long long)a1 minScore:(double)a2 limit:(unsigned long long)a3;
- (id)suggestContactMatchesByPhoneNumber:(id)a0 isMaybe:(BOOL)a1 onlySignificant:(BOOL)a2;
- (void)pruneDuplicateEventExtractions:(id)a0;
- (id)columnQueryPrefixSelect;
- (void)setParentMessagesLimitForTesting:(unsigned long long)a0;
- (long long)_writeOneEntityToDb:(id)a0;
- (BOOL)trimURLTableDownToLimit:(long long)a0 deletionCount:(long long *)a1;
- (void)deleteSerializedContactsForIdSet:(id)a0;
- (BOOL)rejectContactDetailByRecordID:(id)a0 error:(id *)a1;
- (long long)migration_deleteSerializedContacts;
- (id)dumpTables:(id)a0 columns:(id)a1;
- (void)deleteMailIntelligenceForMessageIds:(id)a0;
- (id)_filterOutOlderVersionsOfPseudoEvents:(id)a0;
- (void)deleteInteractionsWithBundleId:(id)a0 groupIdentifiers:(id)a1;
- (id)suggestContactMatchesBySocialProfile:(id)a0 isMaybe:(BOOL)a1 onlySignificant:(BOOL)a2;
- (id)entityKeyCountsForEntityType:(long long)a0 startDate:(id)a1 endDate:(id)a2;
- (void)stopJournaling;
- (void)storeStatsCounterWithKey:(id)a0 value:(double)a1;
- (id)entityFromSqlResult:(struct sqlite3_stmt { } *)a0;
- (id)loadReminderByRecordId:(id)a0;
- (void)setNSString:(id)a0 forKey:(id)a1;
- (struct _PASDBIterAction_ { BOOL x0; })_processContactMatchWithContacts:(id)a0 matches:(id)a1 limit:(long long)a2 masterEntityId:(id)a3 detailEntityId:(id)a4 contactEntityId:(id)a5 matchinfoData:(id)a6 tokens:(id)a7 requireName:(BOOL)a8;
- (void)_writeContactEntityToJournal:(id)a0;
- (void)_writeEnrichmentToSnippetsDb:(id)a0;
- (long long)checkExistsSaliencyForMessageId:(id)a0;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)a0 domainIdentifiers:(id)a1;
- (id)loadStorageContactByRecordId:(id)a0;
- (long long)migration_FixupMergeGroups;
- (id)mostRecentParentKeyForDuplicateKey:(id)a0;
- (id)suggestContactByRecordId:(id)a0 withSnippets:(BOOL)a1 filterConfirmRejectDetails:(BOOL)a2;
- (BOOL)confirm:(BOOL)a0 orRejectContactByRecordID:(id)a1 error:(id *)a2;
- (id)loadDuplicateKeyByRecordId:(id)a0;
- (BOOL)_createEntityFTSTableWithName:(id)a0;
- (long long)_writeMessageEntityToDb:(id)a0;
- (BOOL)_isStringInNoContactsCache:(id)a0;
- (id)getNSStringForKey:(id)a0;
- (id)masterEntityIDsForMasterEntityQuery:(id)a0 bindings:(id /* block */)a1;
- (void)_fullSyncContactsWithStore:(id)a0;
- (id)getUnsubscriptionOpportunitiesSuggestionsDenyListForField:(long long)a0;
- (id)naiveBayesModelQueryResultForFeature:(long long)a0 unigramTokens:(id)a1 bigramTokens:(id)a2;
- (void)deleteAllCNContactMatches;
- (unsigned long long)serializedContactsLimit;
- (void)setValue:(id)a0 forKey:(id)a1 binder:(id /* block */)a2;
- (id)loadTagForPrimaryKey:(long long)a0;
- (void)startJournaling;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)a0 uniqueIdentifiers:(id)a1;
- (void)filterOutRejectedDetailsFromContact:(id)a0;
- (id)loadCNContactMatchesForContact:(id)a0 andGetMaxEntityId:(long long *)a1;
- (void)markMessagesLost:(id)a0;
- (void)_addLocations:(id)a0 toEntityWriteDictionary:(id)a1;
- (long long)migration_deleteEmergencyExtractions;
- (BOOL)registerURLFeedback:(unsigned char)a0 absoluteURL:(id)a1;
- (void)_writeMergeBlobSnapshotForAnalysis:(id)a0;
- (void)registerCachePrecomputationWithCTS;
- (BOOL)processContactEnrichment:(id)a0 recordId:(id)a1;
- (id)rejectFieldValuesForRecordId:(id)a0;
- (void)setMalformedEventWhenRangeForTesting;
- (void)writeEntityGeocodeResultToDb:(id)a0;
- (long long)getMaxEntityId;
- (BOOL)deleteURLsOlderThanDate:(id)a0 deletionCount:(long long *)a1;
- (BOOL)_isBlobAnalysisQueueEmpty;
- (void)deleteValueForKey:(id)a0;
- (id)loadFullDownloadRequestBatch:(unsigned long long)a0;
- (void)runWithWriteLockAcquired:(id /* block */)a0;
- (BOOL)processPseudoContactEntity:(id)a0 recordId:(id)a1;
- (BOOL)rejectRealtimeContact:(id)a0 error:(id *)a1;
- (BOOL)rejectStoredEvent:(id)a0 error:(id *)a1;
- (long long)commitSaliency:(id)a0;
- (id)highlyDiscriminantTokensForFeature:(long long)a0 minCount:(unsigned long long)a1 minRatio:(double)a2;
- (void)_prunePseudoContactGeneratingEmails:(id)a0;
- (void)_addIndexingTagsTo:(id)a0;
- (void)markMessagesFound:(id)a0;
- (void)_writeEntityParentageFor:(id)a0 entityId:(long long)a1;
- (id)domainIdentifierForSpotlightReferenceForBundleIdentifier:(id)a0 uniqueIdentifier:(id)a1;
- (BOOL)rejectStoredReminder:(id)a0 error:(id *)a1;
- (void)_emitChangeNotifications:(id)a0;
- (BOOL)confirmStoredReminder:(id)a0 error:(id *)a1;
- (void)deleteMessagesByDuplicateKey:(id)a0;
- (void)setAllMailIntelligenceAsSalient;
- (BOOL)confirmRealtimeContact:(id)a0 error:(id *)a1;
- (void)truncateContactDetailTable;
- (BOOL)writeURL:(id)a0;
- (void)_writeContactDetails:(id)a0;
- (void)forceBlobSync;
- (id)loadContactForStorageContact:(id)a0 usingSerializedContactCache:(BOOL)a1;
- (id)_computePseudoContactContentHash:(id)a0 contactDetails:(id)a1;
- (long long)entityTypeFromIdentityKeyType:(unsigned long long)a0;
- (long long)migration_newRemindersSchema;
- (long long)migration_reimport;
- (id)parentKeysForDuplicateKey:(id)a0;
- (BOOL)rejectReminderByRecordId:(id)a0 error:(id *)a1;
- (BOOL)isRecentlyDeleted:(id)a0;
- (double)incStatsCounterWithKey:(id)a0;
- (void)unsafeMigrateToVersionForTesting:(unsigned long long)a0;
- (BOOL)confirmReminderByRecordId:(id)a0 error:(id *)a1;
- (id)_loadIdentityBlobs;
- (void).cxx_destruct;
- (id)contactDetailEntityIdForDuplicateKey:(id)a0;
- (void)addDeallocNotification:(id /* block */)a0;
- (BOOL)databasecheck_BrokenEntityIDReferences;
- (void)deleteInteractionEntitiesExceedingLimit:(id)a0 withSuspensionHandler:(id /* block */)a1;
- (id)loadEventForDuplicateKey:(id)a0;
- (id)recordIdForKey:(id)a0;
- (void)deleteMessages:(id)a0;
- (id)duplicateKeysMatchingInteractionBundleId:(id)a0 andTags:(id)a1;
- (id)loadContactDetailsWithWhereClause:(id)a0 onPrep:(id /* block */)a1 type:(unsigned long long)a2 dedupeAgainst:(id)a3 recordId:(id)a4;
- (long long)migration_AddNewishTablesIfMissing;
- (void)_joinIncompleteIdentitySocialProfilesWithOthersOfTheirIlk:(id)a0 name:(id)a1 recordId:(id)a2;
- (void)_linkNamelessSocialProfilesIfAppropriate:(struct graph_t { unsigned int x0; unsigned int x1; struct _vertex_t *x2; } *)a0 nameToVertex:(id)a1 disjointSets:(struct DisjointSetHandle { } *)a2 edges:(id)a3;
- (BOOL)rejectRealtimeEvent:(id)a0 error:(id *)a1;
- (id)batch:(id /* block */)a0;
- (id)getNewBlobsIfChanged;
- (long long)migration_RemoveEntityReferencesWithoutBundleIdentifier;
- (id)loadEntitiesByEntityKey:(id)a0 entityType:(long long)a1 resolveDuplicates:(id /* block */)a2;
- (id)_contactForMasterEntityId:(id)a0 withSnippets:(BOOL)a1 filterConfirmRejectDetails:(BOOL)a2;
- (id)getAllLinks;
- (id)allContactsMasterEntityIdsLimitedTo:(unsigned long long)a0;
- (void)rebuildContactDetailsCacheWithShouldContinueBlock:(id /* block */)a0;
- (long long)clearDatabase:(id)a0;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)a0 uniqueIdentifiers:(id)a1;
- (long long)migration_CreateFTSTableWithITS;
- (long long)runQueries:(id)a0 forVersion:(unsigned int)a1 inTransactionOnDb:(id)a2;
- (id)_deserializeRange:(id)a0;
- (long long)contactMatchedRecordTypeFromEntityType:(long long)a0;
- (void)deleteAllCNContactMatchesForIdSet:(id)a0;
- (long long)migration_RebuildIdentityTables;
- (id)suggestContactsByMasterEntityQuery:(id)a0 withSnippets:(BOOL)a1 limit:(unsigned long long)a2 bindings:(id /* block */)a3;
- (void)_addTimeRange:(id)a0 toEntityWriteDictionary:(id)a1;
- (id)_deleteMessageMetadataByDuplicateKeyNoRecurse:(id)a0;
- (long long)commitEvent:(id)a0;
- (void)bindCheckContactRow:(id)a0 isMe:(BOOL)a1;
- (void)registerSentMailMessage:(id)a0;
- (id)duplicateKeysFromRecordIds:(id)a0;
- (void)_deleteIfNoSpotlightReferences:(id)a0 addToRecentlyDeletedCache:(BOOL)a1;
- (id)loadAllPrecomputedContactMatches;
- (id)_journalEntryFromReminderEntity:(id)a0;
- (id)dbHandleForTesting;
- (BOOL)eventIsCancelled:(id)a0;
- (id)getDoubleNSNumberForKey:(id)a0;
- (id)suggestContactMatchesByContactDetailTag:(id)a0 matchType:(long long)a1;
- (void)updateReimportItemUniqueIdForBundleId:(id)a0 oldValue:(id)a1 newValue:(id)a2;
- (long long)commitStorageLocation:(id)a0 withEventId:(long long)a1;
- (long long)migration_newEventsSchema;
- (id)_popMergeBlobForAnalysis;
- (id)getNSDateForKey:(id)a0;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x0; })a0 endingAt:(struct SGUnixTimestamp_ { double x0; })a1 limitTo:(unsigned long long)a2 options:(unsigned int)a3;
- (void)addInterdictFrom:(id)a0 with:(id)a1;
- (BOOL)confirmEventByRecordId:(id)a0 error:(id *)a1;
- (BOOL)confirmContactDetailByRecordID:(id)a0 error:(id *)a1;
- (id)suggestContactsByMasterEntityQuery:(id)a0 limit:(unsigned long long)a1 bindings:(id /* block */)a2;
- (long long)commitSpotlightMapping:(id)a0 bundleIdentifier:(id)a1 domainIdentifier:(id)a2 uniqueIdentifier:(id)a3;
- (void)_writeMessageEntityToSnippetsDb:(id)a0;
- (void)commitNaiveBayesModel:(id)a0 probabilityFeatureName:(long long)a1;
- (id)reminderEntityIdForPrimaryKey:(long long)a0;
- (id)saliencyForMessageId:(id)a0;
- (void)tryExecuteSnippetsJournal;
- (long long)_popQueuedSerializedContactId;
- (void)_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:(id)a0 name:(id)a1 recordId:(id)a2;
- (void)enumerateAllContactsWithSnippets:(BOOL)a0 limitTo:(unsigned long long)a1 usingBlock:(id /* block */)a2;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x0; })a0 endingAt:(struct SGUnixTimestamp_ { double x0; })a1 limitTo:(unsigned long long)a2;
- (void)_addStringToNoContactsCache:(id)a0;
- (void)pruneNLEventEntitiesOlderThanTwoWeeks;
- (BOOL)contactIsSignificant:(id)a0 usingCoreRecents:(BOOL)a1;
- (id)duplicateKeysMatchingAnyReminderHash:(id)a0;
- (id)_loadReimportRequestsWithWhereClause:(id)a0;
- (id)loadEventByDuplicateKey:(id)a0;
- (void)preventUnsubscriptionOpportunitiesSuggestionsForField:(long long)a0 toValues:(id)a1;
- (id)loadMessagesToRefresh;
- (void)markMessagesUndisplayablyLost:(id)a0;
- (BOOL)needsFullSync;
- (id)_derefChildrenOf:(id)a0;
- (long long)commitContactDetail:(id)a0;
- (BOOL)databasecheck_contactMergeGroupConsistency;
- (BOOL)historyHasContact:(id)a0;
- (BOOL)clearDatabases;
- (BOOL)syncNewBlobsIfChanged;
- (id)_labelIdentityBlobs:(id)a0;
- (void)bindStatementsForCommit:(id)a0 storageEvent:(id)a1;
- (void)_contentWriteEnrichmentToDb:(id)a0;
- (long long)reminderPrimaryKeyForEntityId:(id)a0;
- (long long)migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration;
- (BOOL)rejectEventByRecordId:(id)a0 error:(id *)a1;
- (void)writeSerializedContactAndUpdateEntityIDSet:(id)a0;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)a0 domainIdentifier:(id)a1;
- (void)deleteTokensForDeletedEmailAddresses:(id)a0;
- (id)allRemindersLimitedTo:(unsigned long long)a0;
- (id)emailsPendingVerification;
- (id)masterEntityIdForContactOrContactDetailRecord:(id)a0;
- (id)messageIdsForBundleIdentifier:(id)a0 limit:(unsigned long long)a1;
- (id)messageIdsForBundleIdentifier:(id)a0 domainIdentifierGlobs:(id)a1 limit:(unsigned long long)a2;
- (id)_hashWithDuplicateKeysMatchingTags:(id)a0;
- (id)recentURLsWithLimit:(long long)a0;
- (void)_writeReminderEntitiesToJournal:(id)a0;
- (void)deleteCNContactMatchForContactId:(id)a0;
- (id)_deleteEntitiesByDuplicateKeyNoRecurse:(id)a0;
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_ { double x0; })a0 suspensionHandler:(id /* block */)a1 batchSize:(unsigned long long)a2;
- (id)loadEventForPrimaryKey:(long long)a0;
- (BOOL)_tombstoneExistsForBundleIdentifier:(id)a0;
- (id)getForKey:(id)a0 binder:(id /* block */)a1;
- (void)pruneLostMessagesWithSource:(id)a0 count:(unsigned long long)a1;
- (long long)commitStorageReminder:(id)a0;
- (void)writeCNContactMissForRecordId:(id)a0;
- (id)allEntitiesOfType:(long long)a0 limitedTo:(unsigned long long)a1 onlyMLExtractions:(BOOL)a2;
- (id)_rankSGContacts:(id)a0 bySimilarityToContact:(id)a1;
- (id)getViolationsToTokenCountsPolicy:(id)a0;
- (long long)commitStorageLocation:(id)a0;
- (void)writeCNContactMatchAndUpdateSetForContact:(id)a0 withMatches:(id)a1 andMaxEntityId:(long long)a2;
- (id)_filterOutCancelledEvents:(id)a0;
- (id)_popBatchOfCNContactIds;
- (BOOL)recentsContainSomeOfEmails:(id)a0 phoneNumbers:(id)a1 instantMessageAddresses:(id)a2;
- (id)topSalienciesForMailboxId:(id)a0 limit:(long long)a1;
- (void)_enqueueBatchOfCNContactIds:(id)a0;
- (long long)migration_rebuildFTSWithDetailEntityIDDocIDs;
- (BOOL)rejectReminderByKey:(id)a0 error:(id *)a1;
- (BOOL)contactIsDisplayable:(id)a0;
- (BOOL)deleteURLsFromBundleIdentifier:(id)a0;
- (long long)updateSaliencyCreationTimestampForTesting:(long long)a0 timestamp:(struct SGUnixTimestamp_ { double x0; })a1;
- (BOOL)reminderAlarmTriggeredForRecordId:(id)a0 error:(id *)a1;
- (void)addSpotlightReferenceToEmailRecordId:(id)a0 withBundleIdentifier:(id)a1 uniqueIdentifier:(id)a2 domainIdentifier:(id)a3;
- (void)dealloc;
- (double)_scoreSGContact:(id)a0 bySimilarityToContact:(id)a1 cnContactFullname:(id)a2;
- (void)_addIndexingTagsToParent:(id)a0;
- (id)loadAllContactDetailsFromTableForRecordId:(id)a0;
- (double)incStatsCounterWithKey:(id)a0 byValue:(double)a1;
- (void)registerJournalUnlockHandler;
- (void)reindexSearchableItemsWithMinimumEntityId:(unsigned long long)a0 searchableIndex:(id)a1 acknowledgementHandler:(id /* block */)a2 reindexCount:(int)a3;
- (id)loadAllSerializedContacts;
- (id)reminderOriginForPrimaryKey:(long long)a0;
- (id)initForRawDatabaseAccessWithEntityPath:(id)a0 snippetsPath:(id)a1 error:(id *)a2;
- (id)suggestContactMatchesByEmailAddress:(id)a0;
- (id)initWithEntityDbPath:(id)a0 snippetDbPath:(id)a1 isEphemeral:(BOOL)a2 sharedLock:(id)a3 executeJournals:(BOOL)a4 noMigrate:(BOOL)a5;
- (id)getReminder:(long long)a0;
- (void)_deleteRemindersByRecordIds:(id)a0;
- (void)_emitChangeNotificationForEnrichment:(id)a0;
- (void)purgeTokensWhichLastUpdateWasBefore:(id)a0;
- (void)setMailIntelligenceStagedLogs:(id)a0 forMessageId:(id)a1;
- (id)sortedUnsubscriptionOpportunitiesForField:(long long)a0 limit:(unsigned long long)a1;
- (id)contactIdsMergedWithMasterEntityId:(id)a0;
- (BOOL)_isIdentityStoreDirty;
- (void)deleteSerializedContactForId:(long long)a0;
- (id)_deleteChildEntitiesByRecordIdsInTable:(id)a0;
- (BOOL)_runInitMigrationTasks:(id)a0 noMigrate:(BOOL)a1;
- (void)enumerateContactsByMasterEntityQuery:(id)a0 withSnippets:(BOOL)a1 limit:(unsigned long long)a2 bindings:(id /* block */)a3 usingBlock:(id /* block */)a4;
- (long long)migration_DropMessagingTermsWithPhoneExtensions;
- (id)suggestContactMatchesByContactDetailTag:(id)a0;
- (void)logConfirmPercentAfterContactDetailConfirmation;
- (void)commitNaiveBayesModel:(id)a0 probabilityFeatureName:(long long)a1 updateDate:(id)a2;
- (float)_scoreContactDetail:(id)a0;
- (id)confirmedFieldValuesForEvent:(id)a0;
- (void)deleteInteractionsWithBundleId:(id)a0 identifiers:(id)a1;
- (long long)migration_DeduplicateIdentityPhones;
- (id)suggestContactByIdentityKey:(id)a0 parentKey:(id)a1;
- (id)suggestContactByRecordId:(id)a0;
- (void)_joinIncompleteIdentityEmailWithOthersOfItsIlk:(id)a0 name:(id)a1 recordId:(id)a2;
- (BOOL)trimURLs;
- (void)_clearPendingJobs;
- (unsigned long long)_minEntityIdFromMinEntityId:(unsigned long long)a0 withContactIdentifiers:(id)a1;
- (long long)updateEvent:(id)a0 primaryKey:(long long)a1;
- (id)loadEventForRecordId:(id)a0;
- (long long)migration_newContactDetailsSchema;
- (void)resolveFullDownloadRequests:(id)a0;
- (void)clearMailIntelligence;
- (void)_enumerateContactsForMasterEntityIds:(id)a0 withSnippets:(BOOL)a1 filterConfirmRejectDetails:(BOOL)a2 usingBlock:(id /* block */)a3;
- (void)_hashAttachedPseudoContacts:(id)a0;
- (id)loadReminderByKey:(id)a0;
- (long long)migration_deleteNilDateEvents;
- (id)_uniqueGoodDetailMatchFrom:(id)a0 toDetails:(id)a1 nonUnique:(BOOL *)a2;
- (id)suggestEventsStartingAt:(struct SGUnixTimestamp_ { double x0; })a0 endingAt:(struct SGUnixTimestamp_ { double x0; })a1 prefix:(id)a2 limitTo:(unsigned long long)a3;
- (id)allDeliveriesWithLimit:(unsigned long long)a0;
- (BOOL)contactIsSignificantOrSignificanceIsDisabled:(id)a0 usingCoreRecents:(BOOL)a1;
- (void)_contactIdsForContactNameMatches:(id)a0 strongNameIds:(id)a1 weakNameIds:(id)a2;
- (void)pruneReminders;
- (BOOL)areSubModelsEmpty;
- (void)setAllMailIntelligenceAsNotSalient;
- (id)makeInterdictsForBlob:(id)a0 withContactStore:(id)a1;
- (void)_recordPseudoContactsWithDeletedDetailsInTable:(id)a0 deletedChildrenTable:(id)a1;
- (void)deleteCompletedReimportRequests;
- (id)loadReminderByRecordIdOld:(id)a0;
- (void)refreshSuggestionsContact:(id)a0;
- (BOOL)confirmStoredEvent:(id)a0 error:(id *)a1;
- (BOOL)anyHandleIsSignificant:(id)a0;
- (void)setInt64NSNumber:(id)a0 forKey:(id)a1;
- (struct _PASDBIterAction_ { BOOL x0; })_updateURLs:(id)a0 stmt:(id)a1;
- (void)deleteItemsWithEntityTag:(id)a0;
- (long long)migration_ConvertContentAndDupKeyHashesToBlobs;
- (id)storageLocationWithPrimaryKey:(long long)a0;
- (id)urlsFoundBetweenStartDate:(id)a0 endDate:(id)a1 bundleIdentifier:(id)a2;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)a0 uniqueIdentifier:(id)a1;
- (id)getSGMIStoredAddresses;
- (void)removeSnippetsForEntities:(id)a0;
- (id)curatedRecordIds;
- (void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)a0;
- (long long)migration_MoveContentToSnippets;
- (long long)migration_RecreateFTSTableWithITS;
- (id)confirmedFieldValuesForEntity:(id)a0;
- (void)deleteByRecordId:(id)a0;
- (long long)fixupVersionMismatch;
- (id)mailIntelligenceStagedLogsForMessageId:(id)a0;
- (void)deleteSpotlightReferencesWithBundleIdentifier:(id)a0;
- (BOOL)reminderAlarmTriggeredForStorageReminder:(id)a0 error:(id *)a1;
- (id)subModelsStats;
- (BOOL)tombstoneExistsForSpotlightReferenceWithBundleIdentifier:(id)a0 uniqueIdentifier:(id)a1 domainIdentifier:(id)a2;
- (id)loadEntitiesBySourceKey:(id)a0 entityType:(long long)a1 resolveDuplicates:(id /* block */)a2;
- (void)logConfirmPercentAfterContactDetailRejection;
- (id)loadAllContactDetailsForRecordId:(id)a0;
- (id)_filterOutAllButAcceptedWithUpdatedFields:(id)a0;
- (id)loadSerializedContactForId:(long long)a0;
- (id)filterOutUndisplayableEntities:(id)a0;
- (id)_serializeRange:(id)a0;
- (long long)contactDetailPrimaryKeyForDuplicateKey:(id)a0;
- (void)deleteItemsWithEntityTag:(id)a0 preserveEventConfirmationHistory:(BOOL)a1;
- (id)languageToUpdateEntityFTSTo;
- (id)messageIdsForBundleIdentifier:(id)a0 uniqueIdentifiers:(id)a1;
- (BOOL)reimportRequestsContainBundleIdentifier:(id)a0 uniqueIdentifier:(id)a1;
- (id)loadEntityByKey:(id)a0;
- (long long)insertSaliency:(id)a0;
- (void)markReimportRequestAsExecutedWithRequestId:(unsigned long long)a0;
- (BOOL)addSpotlightReferenceToEmailIfFullyDownloaded:(id)a0 withBundleIdentifier:(id)a1 uniqueIdentifier:(id)a2 domainIdentifier:(id)a3;
- (id)_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:(id)a0 uniqueIdentifiers:(id)a1;
- (void)_markRecordsLostIfNoSpotlightReferences:(id)a0;
- (BOOL)corruptionMarkerPresent;
- (BOOL)_shouldContinueReindex:(int)a0;
- (id)loadEventByKeyForOldCodePathTesting:(id)a0;
- (void)_markIdentityStoreClean;
- (long long)contactMatchedRecordTypeFromIdentityKeyType:(unsigned long long)a0;
- (void)logConfirmPercentAfterContactConfirmation;
- (id)splitNeededFor:(id)a0 withInterdicts:(id)a1 curatedRecordIds:(id)a2;
- (void)pruneEntitiesOlderThanOneYearWithSuspensionHandler:(id /* block */)a0;
- (id)splitBlob:(id)a0 withInterdicts:(id)a1 edges:(id)a2 curatedRecordIds:(id)a3;
- (id)suggestContactMatchesByType:(long long)a0 searchString:(id)a1 isMaybe:(BOOL)a2 onlySignificant:(BOOL)a3;
- (void)_reportDbStatsBackground;
- (id)loadAllContactDetailsFromTableForRecordId:(id)a0 type:(unsigned long long)a1;
- (void)markEntityAsDupeByRecordId:(id)a0;
- (id)loadUnqueriedReimportRequests;
- (id)storageContactByKey:(id)a0;
- (id)suggestContactsWithContact:(id)a0 withSnippets:(BOOL)a1 filterConfirmRejectDetails:(BOOL)a2 limitTo:(unsigned long long)a3;
- (void)_logConfirmPercentWithConfirmCount:(double)a0 rejectCount:(double)a1 domain:(id)a2 suffix:(id)a3;
- (void)deleteAllReimportRequestsOlderThanDate:(id)a0;
- (id)loadUnseenReimportItemsForRequest:(unsigned long long)a0;
- (void)handleDeviceLockStateEvent:(int)a0;
- (id)urlsFoundBetweenStartDate:(id)a0 endDate:(id)a1 excludingBundleIdentifiers:(id)a2 containingSubstring:(id)a3 flagFilter:(unsigned char)a4 limit:(long long)a5;
- (void)pruneEntitiesOlderThan:(struct SGUnixTimestamp_ { double x0; })a0 suspensionHandler:(id /* block */)a1;

@end
