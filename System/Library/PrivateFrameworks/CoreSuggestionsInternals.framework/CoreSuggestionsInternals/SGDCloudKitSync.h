@class _PASKVOHandler, NSString, CKDatabase, _SGDCloudKitSyncPersistedState, CKContainer, NSOperationQueue, APSConnection, NSError, NSObject, NSMutableArray, SGFuture, NSOperation;
@protocol OS_dispatch_queue;

@interface SGDCloudKitSync : NSObject <APSConnectionDelegate> {
    _PASKVOHandler *_kvoHandler;
    CKDatabase *_database;
    id /* block */ _callback;
    id /* block */ _deleteAllSyncedItemsCallback;
    BOOL _readyForNewEntities;
    APSConnection *_apsConnection;
    NSObject<OS_dispatch_queue> *_queue;
    NSOperationQueue *_opQueue;
    NSMutableArray *_operationsToAddToOpQueue;
    CKContainer *_container;
    SGFuture *_accountInfoFuture;
    BOOL _accountInfoInFlight;
    _SGDCloudKitSyncPersistedState *_persistedState;
    long long _suspendCount;
    BOOL _noZone;
    BOOL _disabledBecauseOutOfDateSoftware;
    NSOperation *_inProgressProcureSaltOperation;
    NSOperation *_inProgressCreateZoneOperation;
    NSOperation *_inProgressDeleteZoneOperation;
    NSOperation *_inProgressFetchNewEntitiesOperation;
    BOOL _requestedFetchNewEntitiesWhileRequestAlreadyInFlight;
    NSError *_createZoneError;
    NSError *_deleteZoneError;
    NSError *_procureSaltError;
    BOOL _processingStateChanges;
    BOOL _pendingProcessStateChanges;
    struct ct_green_tea_logger_s { } *_greenTeaLogger;
    SGFuture *_privacySaltFuture;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)sharedInstance;
+ (id)apsEnvironmentStringForContainer:(id)a0;
+ (id)_callbackQueue;
+ (void)setSharedInstanceConfigurationBlock:(id /* block */)a0;
+ (id)_sharedInstanceConfigurationQueue;

- (void)disable;
- (void)accountChanged:(id)a0;
- (id)accountInfo;
- (void)setDatabase:(id)a0;
- (id)init;
- (void)_coupleOperationTrainWithStart:(id)a0 end:(id)a1;
- (void)connection:(id)a0 didReceivePublicToken:(id)a1;
- (void)connection:(id)a0 didReceiveIncomingMessage:(id)a1;
- (id)addWriteOperationForRecordGetter:(id /* block */)a0 deleteGetter:(id /* block */)a1 withRetries:(unsigned long long)a2;
- (id)ckErrorForRecordZoneId:(id)a0 inError:(id)a1;
- (void)connection:(id)a0 didReceiveToken:(id)a1 forTopic:(id)a2 identifier:(id)a3;
- (void)setDeleteAllSyncedItemsCallback:(id /* block */)a0;
- (void)suspend;
- (id)addDeleteZoneAttemptOperationWithRetries:(unsigned long long)a0;
- (void)setReadyForNewEntities:(BOOL)a0;
- (void)connection:(id)a0 didChangeConnectedStatus:(BOOL)a1;
- (void)deleteGroupId:(id)a0;
- (id)addCreateZoneOperation;
- (id)addOperation:(id)a0;
- (void)deleteZoneWithCompletion:(id /* block */)a0;
- (id)addManateeSanityCheckOperation;
- (void)failSalt;
- (id)addProcureSaltOperation;
- (id)_ckErrorForId:(id)a0 inError:(id)a1;
- (void)deleteStorageEvent:(id)a0;
- (void)connectionDidReconnect:(id)a0;
- (void)processStateChanges;
- (void)clearErrors;
- (id)addDeleteZoneOperation;
- (void)suspendAndResumeAfter:(double)a0;
- (id)addWriteOperationForRecordGetter:(id /* block */)a0 deleteGetter:(id /* block */)a1 withRetries:(unsigned long long)a2 isFirstTry:(BOOL)a3;
- (void).cxx_destruct;
- (id)addFetchNewEntitiesOperation;
- (void)connection:(id)a0 didFailToSendOutgoingMessage:(id)a1 error:(id)a2;
- (id)addOperation;
- (id)addProcureSaltAttemptOperationWithRetries:(unsigned long long)a0;
- (id)ckErrorForRecordId:(id)a0 inError:(id)a1;
- (void)resume;
- (void)connection:(id)a0 didSendOutgoingMessage:(id)a1;
- (id)shouldRemoveEventsFromEventKit;
- (id)addCreateZoneAttemptOperationWithRetries:(unsigned long long)a0;
- (BOOL)pauseIfNeededAndReturnRetryEligibilityForError:(id)a0;
- (void)createSubscriptionWithRetries:(unsigned long long)a0;
- (id)addFetchNewEntitiesAttemptOperationWithRetries:(unsigned long long)a0;
- (void)dealloc;
- (id)invokeNewEntitiesCallbackWithEntity:(id)a0;
- (id)addDeleteAndRecreateZoneOperation;
- (BOOL)shouldRecreateZoneForRecordError:(id)a0 operationError:(id)a1;
- (void)addEnrichment:(id)a0 withParentEntity:(id)a1;
- (id)privacySalt;
- (id)getUnderlyingError:(id)a0;
- (void)_addDependency:(id)a0 toTrain:(id)a1;
- (void)setNewEntitiesCallback:(id /* block */)a0;
- (id)recordZoneId;

@end
