@class WPDZoneManager, NSMutableDictionary, NSObject, WPDObjectDiscoveryManager, WPDaemonServer, NSString, NSSet, WPDScanManager, WPDPipeManager, NSMutableSet, WPDAdvertisingManager, NSXPCConnection, NSUUID;
@protocol OS_voucher, WPDClientDelegate, OS_dispatch_queue;

@interface WPDClient : NSObject <WPXPCDaemonProtocol, WPDClientProtocol> {
    unsigned long long _wpDClientSignPostID;
}

@property (class, readonly, nonatomic) NSMutableSet *unknownUseCases;
@property (class, readonly, nonatomic) NSSet *approvedBundleIDs;
@property (class, readonly, nonatomic) NSSet *approvedProcesses;

@property BOOL portTickled;
@property long long holdVouchers;
@property int processID;
@property (retain) NSString *processName;
@property (retain) NSString *clientTypeString;
@property (retain) NSString *machName;
@property (retain) NSUUID *clientUUID;
@property (retain) NSString *bundleID;
@property (weak) WPDScanManager *scanManager;
@property (weak) WPDAdvertisingManager *advertisingManager;
@property (weak) WPDZoneManager *zoneManager;
@property (weak) WPDPipeManager *pipeManager;
@property (weak) WPDObjectDiscoveryManager *objectDiscoveryManager;
@property (retain) NSMutableDictionary *connections;
@property (retain) NSUUID *identifier;
@property BOOL entitledForZones;
@property BOOL entitledForObjectDiscovery;
@property BOOL entitledForRanging;
@property BOOL pendingSent;
@property (retain) NSMutableDictionary *advertTimers;
@property (retain) NSMutableDictionary *advertTimerState;
@property (retain) NSMutableDictionary *scanTimers;
@property (retain) NSMutableDictionary *connectionTimer;
@property BOOL scanDenylisted;
@property BOOL scansOff;
@property double scanTimeout;
@property double advTimeout;
@property (retain) NSMutableSet *lePipePeersSet;
@property (retain) NSMutableSet *endpointsSet;
@property BOOL isObjectDiscovery;
@property (readonly) BOOL supportsObjectDiscovery;
@property (readonly) BOOL supportsRanging;
@property (retain, nonatomic) NSObject<OS_voucher> *scanVoucher;
@property (retain, nonatomic) NSObject<OS_voucher> *advertVoucher;
@property (readonly, weak) id<WPDClientDelegate> delegate;
@property BOOL isTestModeClient;
@property BOOL canDisableScans;
@property (retain) NSXPCConnection *conn;
@property (retain) NSObject<OS_dispatch_queue> *messageQueue;
@property BOOL registered;
@property (readonly, weak) WPDaemonServer *server;
@property (readonly, weak) NSObject<OS_dispatch_queue> *serverQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)generateStateDump;
+ (void)initialize;
+ (BOOL)enableScanAdvertVouchers;

- (void)updatedNotificationState:(BOOL)a0 forCharacteristic:(id)a1 inService:(id)a2 withPeripheral:(id)a3;
- (void)central:(id)a0 subscribed:(BOOL)a1 toCharacteristic:(id)a2 inService:(id)a3;
- (void)unregisterEndpoint:(id)a0;
- (void)discoveredCharacteristicsAndServices:(id)a0 forPeripheral:(id)a1;
- (void)peerTrackingAvailable;
- (void)disconnectedDeviceOverLEPipe:(id)a0 withError:(id)a1;
- (void)advertisingPendingOfType:(unsigned char)a0;
- (void)sentData:(id)a0 forCharacteristic:(id)a1 inService:(id)a2 forPeripheral:(id)a3 withError:(id)a4;
- (void)connectedDeviceOverLEPipe:(id)a0;
- (void)registerForAnyScanResults:(BOOL)a0;
- (void)connectedDevice:(id)a0 withError:(id)a1 shouldDiscover:(BOOL)a2;
- (void)generateStateDump;
- (void)registerEndpoint:(id)a0 requireAck:(BOOL)a1 requireEncryption:(BOOL)a2;
- (void)peerTrackingFull;
- (void)enableRanging:(BOOL)a0 reply:(id /* block */)a1;
- (void)sentData:(id)a0 toEndpoint:(id)a1 forPeripheral:(id)a2 withError:(id)a3;
- (void)advertisingStoppedOfType:(unsigned char)a0 withError:(id)a1;
- (void)startAdvertising:(id)a0;
- (void)advertisingFailedToStart:(id)a0 ofType:(unsigned char)a1;
- (id)xpcConnectionForClient;
- (void)foundPeer:(id)a0 ofType:(unsigned char)a1;
- (void)advertisingStartedOfType:(unsigned char)a0;
- (void)stoppedTrackingPeer:(id)a0 ofType:(unsigned char)a1;
- (void)lostPeer:(id)a0 ofType:(unsigned char)a1;
- (void)rangingEnabled:(BOOL)a0 withError:(id)a1;
- (void)startScanning_async:(id)a0;
- (void)setupConnection;
- (void)stopScans;
- (void)discoverCharacteristicsAndServices:(id)a0 forPeripheral:(id)a1;
- (void)anyDiscoveredDevice:(id)a0;
- (void)receivedTestResponse:(id)a0;
- (void)sendRegisteredWithDaemonAndContinuingSession:(BOOL)a0;
- (id)getManager;
- (void)endTestMode;
- (void)receivedData:(id)a0 fromCharacteristic:(id)a1 inService:(id)a2 forPeripheral:(id)a3;
- (id)initWithXPCConnection:(id)a0 server:(id)a1;
- (void)resetConnection;
- (void)checkAllowDuplicates:(id /* block */)a0;
- (void)connectToPeer:(id)a0 withOptions:(id)a1;
- (void)tickleMachPort;
- (void)overrideScanTimeout:(double)a0;
- (void)stopTrackingPeerWithRequest:(id)a0;
- (void)queueBlock:(id /* block */)a0;
- (void)startTrackingPeerWithRequest:(id)a0;
- (void)stopTrackingAllZones;
- (void)getPowerLogStats:(id /* block */)a0;
- (void)startTrackingZone:(id)a0;
- (void)bandwidthStateUpdated:(id)a0;
- (void)listenToBandwidthNotifications;
- (void)discoveredDevice:(id)a0;
- (id)connectionForUUID:(id)a0;
- (void)createdConnection:(id)a0;
- (void)disconnectFromPeer:(id)a0;
- (void)verifyApprovedUseCase;
- (void)stopTrackingZones:(id)a0;
- (void)cancelConnectionTimer:(id)a0;
- (void)disconnectedPeer:(id)a0 error:(id)a1;
- (void).cxx_destruct;
- (void)stopScanning:(id)a0;
- (void)notifyClientStateChange:(long long)a0 Restricted:(BOOL)a1;
- (void)receivedData:(id)a0 fromEndpoint:(id)a1 forPeripheral:(id)a2;
- (void)startAdvertising_async:(id)a0;
- (void)isRangingEnabledReply:(id /* block */)a0;
- (void)dumpDaemonState;
- (void)_signpostBegin;
- (void)disableScanning;
- (void)discoveredDevices:(id)a0;
- (void)sendDatatoLePipe:(id)a0 forPeer:(id)a1;
- (void)sendTestRequest:(id)a0;
- (void)sendDataToCharacteristic:(id)a0 inService:(id)a1 forPeer:(id)a2;
- (void)enteredZone:(id)a0 manufacturerData:(id)a1;
- (void)_signpostEnd;
- (void)addCharacteristic:(id)a0 forService:(id)a1;
- (void)readyForDataTransfer;
- (void)shouldSubscribe:(BOOL)a0 toPeer:(id)a1 withCharacteristic:(id)a2 inService:(id)a3;
- (void)dealloc;
- (void)overrideAdvTimeout:(double)a0;
- (void)getAllTrackedZones;
- (void)checkEntitlements;
- (void)registerWithDaemon:(id)a0 forProcess:(id)a1 machName:(id)a2 holdVouchers:(long long)a3;
- (void)stopAdvertising:(id)a0;
- (void)enableTestMode;
- (void)destroy_async;
- (void)destroy;
- (void)resumeCommunicationWithConnection:(id)a0 andProcessID:(int)a1;
- (void)stopAdvertising_async:(id)a0;
- (void)stopScanning_async:(id)a0;
- (void)startScanning:(id)a0;
- (void)exitedZone:(id)a0;

@end
