@class NSDictionary;

@interface PFMetadataSyndication : PFMetadataCore {
    NSDictionary *_syndicationProperties;
}

- (unsigned long long)fileSize;
- (id)focalLength;
- (id)codecFourCharCode;
- (id)exposureBias;
- (id)hdrGainMap;
- (id)latitude;
- (id)lightSource;
- (id)whiteBalanceIndex;
- (long long)orientation;
- (id)longitude;
- (id)cameraModel;
- (id)cameraMake;
- (id)captureMode;
- (id)flashValue;
- (id)digitalZoomRatio;
- (id)speed;
- (id)playbackVariation;
- (id)imageDirectionRef;
- (id)livePhotoPairingIdentifier;
- (id)spatialOverCaptureIdentifier;
- (id)semanticStylePreset;
- (id)timeZoneOffset;
- (id)plistForEncoding;
- (id)semanticStyleToneBias;
- (id)nominalFrameRate;
- (id)altitude;
- (BOOL)configureWithMetadataPlist:(id)a0;
- (id)exposureTime;
- (void).cxx_destruct;
- (id)lensModel;
- (BOOL)isPhotoBooth;
- (BOOL)isEqual:(id)a0;
- (id)_makeDateTimeProperties;
- (id)whiteBalance;
- (unsigned long long)photoProcessingFlags;
- (id)semanticStyleWarmthBias;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })duration;
- (id)GIFDelayTime;
- (id)copyWithZone:(struct _NSZone { } *)a0;
- (id)imageDirection;
- (id)focalLengthIn35mm;
- (id)profileName;
- (id)semanticStyleRenderingVersion;
- (id)iso;
- (long long)customRendered;
- (id)burstUuid;
- (BOOL)isFrontFacingCamera;
- (id)initWithSyndicationProperties:(id)a0;
- (id)hdrGain;
- (id)syndicationProperties;
- (id)userComment;
- (BOOL)isImage;
- (id)meteringMode;
- (id)lensMake;
- (id)speedRef;
- (id)gpsHPositioningError;
- (id)fNumber;
- (id)pixelHeight;
- (id)pixelWidth;
- (id)audioSampleRate;
- (BOOL)isCinematicVideo;
- (id)videoDynamicRange;
- (BOOL)isMovie;
- (id)audioDataRate;
- (id)audioTrackFormat;
- (BOOL)isProRes;
- (BOOL)hasHDRGainMap;
- (BOOL)isSyndicationOriginated;
- (id)montageString;
- (id)originalFileName;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })stillImageDisplayTime;
- (id)_timeZoneOffsetStringFromTimeZoneOffsetSeconds:(id)a0;
- (id)gpsDateTime;
- (id)originatingAssetIdentifer;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })videoComplementDuration;

@end
