@class NSArray, NSMutableArray, RSOrthographicDetector;
@protocol RSKeyframe;

@interface RSDoorWindowOnlineDetector : NSObject {
    struct WallOpeningSelectorForDoorWindow { void /* function */ **_vptr$WallOpeningSelectorForDoorWindow; NSMutableArray *_infer_wall_openings; struct vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__begin_; struct WallOpeningAttribute *__end_; struct __compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__value_; } __end_cap_; } _infer_wall_openings_attributes; NSMutableArray *_target_infer_wall_openings; struct vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__begin_; struct WallOpeningAttribute *__end_; struct __compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__value_; } __end_cap_; } _target_infer_wall_openings_attributes; NSArray *_new_wall_openings; id<RSKeyframe> _cur_keyframe; float _floor_height; float _ceiling_height; void *_convex_hull; unsigned long long _convex_hull_size; struct vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__begin_; struct RS3DSurfaceOnline *__end_; struct __compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__value_; } __end_cap_; } _cur_lines; struct vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__begin_; struct RS3DSurfaceOnline *__end_; struct __compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__value_; } __end_cap_; } _new_lines; struct vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__begin_; struct RS_Match_Info *__end_; struct __compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__value_; } __end_cap_; } _cur_matches; struct vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__begin_; struct RS_Match_Info *__end_; struct __compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__value_; } __end_cap_; } _new_matches; BOOL _select_wall; } _wall_selector_for_door_window;
    struct WallOpeningSelectorForDoorWindow { void /* function */ **_vptr$WallOpeningSelectorForDoorWindow; NSMutableArray *_infer_wall_openings; struct vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__begin_; struct WallOpeningAttribute *__end_; struct __compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__value_; } __end_cap_; } _infer_wall_openings_attributes; NSMutableArray *_target_infer_wall_openings; struct vector<wlw_olp::WallOpeningAttribute, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__begin_; struct WallOpeningAttribute *__end_; struct __compressed_pair<wlw_olp::WallOpeningAttribute *, std::allocator<wlw_olp::WallOpeningAttribute>> { struct WallOpeningAttribute *__value_; } __end_cap_; } _target_infer_wall_openings_attributes; NSArray *_new_wall_openings; id<RSKeyframe> _cur_keyframe; float _floor_height; float _ceiling_height; void *_convex_hull; unsigned long long _convex_hull_size; struct vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__begin_; struct RS3DSurfaceOnline *__end_; struct __compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__value_; } __end_cap_; } _cur_lines; struct vector<rs_ol::RS3DSurfaceOnline, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__begin_; struct RS3DSurfaceOnline *__end_; struct __compressed_pair<rs_ol::RS3DSurfaceOnline *, std::allocator<rs_ol::RS3DSurfaceOnline>> { struct RS3DSurfaceOnline *__value_; } __end_cap_; } _new_lines; struct vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__begin_; struct RS_Match_Info *__end_; struct __compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__value_; } __end_cap_; } _cur_matches; struct vector<rshape::RS_Match_Info, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__begin_; struct RS_Match_Info *__end_; struct __compressed_pair<rshape::RS_Match_Info *, std::allocator<rshape::RS_Match_Info>> { struct RS_Match_Info *__value_; } __end_cap_; } _new_matches; BOOL _select_wall; } _open_selector_for_door_window;
    struct MergerForDoorWindow { void /* function */ **_vptr$MergerForDoorWindow; NSMutableArray *_new_instances; NSArray *_target_infer_walls_openings; NSArray *_new_walls_openings; NSMutableArray *_merged_instances; NSMutableArray *_prev_instances; NSMutableArray *_prev_instances_on_infer_walls_openings; NSMutableArray *_prev_instances_to_keep; } _merger_for_close_door_window;
    struct MergerForDoorWindow { void /* function */ **_vptr$MergerForDoorWindow; NSMutableArray *_new_instances; NSArray *_target_infer_walls_openings; NSArray *_new_walls_openings; NSMutableArray *_merged_instances; NSMutableArray *_prev_instances; NSMutableArray *_prev_instances_on_infer_walls_openings; NSMutableArray *_prev_instances_to_keep; } _merger_for_open_door;
    RSOrthographicDetector *_doorWindowDetector;
}

- (id)init;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reset;
- (id)runWithPointCloud:(id)a0 currentKeyframe:(id)a1 temporalMeta:(id)a2 floorPlan:(id)a3 lcnnOpenings:(id)a4;
- (void)setBeautificationEnable:(BOOL)a0;

@end
