@class RSTextCoachingSignal, NSDate;

@interface RSScanCoaching : NSObject {
    struct SpeedCoaching { float _speed_range; float _proj_speed_range; float _threshold; struct deque<std::tuple<simd_float4x4, double>, std::allocator<std::tuple<simd_float4x4, double>>> { struct __split_buffer<std::tuple<simd_float4x4, double> *, std::allocator<std::tuple<simd_float4x4, double> *>> { void **__first_; void **__begin_; void **__end_; struct __compressed_pair<std::tuple<simd_float4x4, double> **, std::allocator<std::tuple<simd_float4x4, double> *>> { void **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<std::tuple<simd_float4x4, double>>> { unsigned long long __value_; } __size_; } _pose_queue; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _score_queue; struct deque<float __attribute__((ext_vector_type(2))), std::allocator<float __attribute__((ext_vector_type(2)))>> { struct __split_buffer<float * __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>> { void **__first_; void **__begin_; void **__end_; struct __compressed_pair<float ** __attribute__((ext_vector_type(2))), std::allocator<float * __attribute__((ext_vector_type(2)))>> { void **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float __attribute__((ext_vector_type(2)))>> { unsigned long long __value_; } __size_; } _smooth_queue; void /* unknown type, empty encoding */ _latest_v; void /* unknown type, empty encoding */ _latest_w; NSDate *_last_vio_lost_time; struct CoachingModel { struct DMat { int rows; int cols; double *data; } _w1; struct DMat { int rows; int cols; double *data; } _b1; struct DMat { int rows; int cols; double *data; } _w2; struct DMat { int rows; int cols; double *data; } _b2; } _model; } _speed;
    struct LightCoaching { float _kpt_range; float _threshold; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _score_queue; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _smooth_queue; float _latest_mean_color; float _latest_n_kpt; struct CoachingModel { struct DMat { int rows; int cols; double *data; } _w1; struct DMat { int rows; int cols; double *data; } _b1; struct DMat { int rows; int cols; double *data; } _w2; struct DMat { int rows; int cols; double *data; } _b2; } _model; } _light;
    struct DistanceCoaching { float _threshold; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _score_queue; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _smooth_queue; float _latest_meand; struct CoachingModel { struct DMat { int rows; int cols; double *data; } _w1; struct DMat { int rows; int cols; double *data; } _b1; struct DMat { int rows; int cols; double *data; } _w2; struct DMat { int rows; int cols; double *data; } _b2; } _model; } _distance;
    struct OnboardCoaching { float _v_thr1; float _v_thr2; float _w_thr1; float _w_thr2; float _brightness_thr1; float _brightness_thr2; float _distance_thr1; float _distance_thr2; float _n_kpt_thr1; float _n_kpt_thr2; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _texture_score_queue; struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float **__first_; float **__begin_; float **__end_; struct __compressed_pair<float **, std::allocator<float *>> { float **__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } _speed_score_queue; NSDate *_firstCallTime; RSTextCoachingSignal *_latest_signal; float _w_v; float _b_v; float _w_w; float _b_w; float _w_brightness; float _b_brightness; float _w_distance; float _b_distance; float _w_n_kpt; float _b_n_kpt; } _onboard;
    struct vector<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>> { void *__begin_; void *__end_; struct __compressed_pair<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad> *, std::allocator<std::tuple<float __attribute__((ext_vector_type(3))), float __attribute__((ext_vector_type(3))), RS3DSurfaceQuad>>> { void *__value_; } __end_cap_; } _lastWalls;
    RSTextCoachingSignal *_floor_signal;
    RSTextCoachingSignal *_ceiling_signal;
    RSTextCoachingSignal *_last_signal;
    void /* unknown type, empty encoding */ _wallThr;
    NSDate *_firstKeyframeTime;
    NSDate *_firstCallTime;
    NSDate *_floorCeilingTime;
    NSDate *_lastModelTime;
    unsigned long long _maxModelFrameRate;
    BOOL _enableOnboarding;
    struct mutex { struct _opaque_pthread_mutex_t { long long __sig; char __opaque[56]; } __m_; } _readwriteLock;
}

@property (readonly, nonatomic) long long state;

- (id)init;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reset;
- (void)setOnboarding:(BOOL)a0;
- (float)computeCosPitchFromPose:(struct { void /* unknown type, empty encoding */ x0[4]; })a0 intrinsic:(struct { void /* unknown type, empty encoding */ x0[3]; })a1;
- (struct { void /* unknown type, empty encoding */ x0[3]; })correctIntrinsics:(struct { void /* unknown type, empty encoding */ x0[3]; })a0;
- (BOOL)currentPoseSeeWall:(struct { void /* unknown type, empty encoding */ x0[4]; })a0 intrinsic:(struct { void /* unknown type, empty encoding */ x0[3]; })a1;
- (void)processFloorPlan:(id)a0;
- (id)runModelWithFrame:(id)a0 cameraPose:(struct { void /* unknown type, empty encoding */ x0[4]; })a1 driftSignal:(id)a2 intrinsic:(struct { void /* unknown type, empty encoding */ x0[3]; })a3 seeWall:(BOOL)a4;
- (void)runWithFloorCeilingCount:(SEL)a0;
- (id)runWithFrame:(id)a0 cameraPose:(struct { void /* unknown type, empty encoding */ x0[4]; })a1 driftSignal:(id)a2;
- (void)updateCoachingStateFirstKeyframe:(BOOL)a0;

@end
