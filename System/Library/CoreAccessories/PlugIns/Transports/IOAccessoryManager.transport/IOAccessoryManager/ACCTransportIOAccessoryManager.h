@class NSString, NSSet, NSMutableSet, NSData, NSObject;
@protocol OS_dispatch_source;

@interface ACCTransportIOAccessoryManager : ACCTransportIOAccessoryBase {
    BOOL _allAccessoryInfoFieldsAreValid;
    NSString *_connectionUUID;
}

@property (retain, nonatomic) NSMutableSet *mutableioAccessoryChildPorts;
@property (retain, nonatomic) NSMutableSet *mutableioAccessoryEAChildPorts;
@property (retain, nonatomic) NSMutableSet *mutableioAccessoryAuthCPChildPorts;
@property (retain, nonatomic) NSMutableSet *mutableioAccessoryOOBPairingChildPorts;
@property (retain, nonatomic) NSMutableSet *mutableioAccessoryConfigStreamChildPorts;
@property (nonatomic) int resistorID;
@property (retain, nonatomic) NSString *deviceName;
@property (retain, nonatomic) NSString *deviceVendorName;
@property (retain, nonatomic) NSString *deviceModelNumber;
@property (retain, nonatomic) NSString *deviceSerialNumber;
@property (retain, nonatomic) NSString *deviceHardwareRevision;
@property (retain, nonatomic) NSString *deviceFirmwareRevision;
@property (retain, nonatomic) NSString *ppid;
@property (retain, nonatomic) NSData *digitalID;
@property (retain, nonatomic) NSString *regionCode;
@property (readonly, nonatomic) BOOL bIsInductive;
@property (readonly, nonatomic) BOOL bIsInductivePowerToAccessory;
@property (nonatomic) struct IONotificationPort { } *batteryNotifyPortRef;
@property (nonatomic) unsigned int batteryIterator;
@property (nonatomic) unsigned char batteryChargeLevelPercent;
@property (nonatomic) unsigned int notificationRef;
@property (readonly, nonatomic) BOOL bIsWatch;
@property (readonly, nonatomic) NSSet *ioAccessoryChildPorts;
@property (readonly, nonatomic) NSSet *eaProtocolChildPorts;
@property (readonly, nonatomic) NSSet *authCPChildPorts;
@property (readonly, nonatomic) NSSet *oobPairingChildPorts;
@property (readonly, nonatomic) NSSet *configStreamChildPorts;
@property (nonatomic) int accessoryPowerMode;
@property (nonatomic) BOOL needsOOBPairing;
@property (nonatomic) BOOL isAuthenticated;
@property (nonatomic) BOOL isAuthTimedOut;
@property (readonly, nonatomic) BOOL isRootPort;
@property (readonly, nonatomic) int connectionType;
@property (nonatomic) BOOL bAccConnected;
@property (readonly, nonatomic) NSObject<OS_dispatch_source> *authTimerAccessory;
@property (copy) NSString *connectionUUID;

- (int)_connectionTypeForPrimaryPort;
- (void)_handleResistorIDChangeNotification:(int)a0;
- (BOOL)supervisedTransportsRestricted;
- (BOOL)setFeaturesFromAuthStatus:(int)a0 authCert:(id)a1 certType:(int)a2;
- (BOOL)setPowerDuringSleepEnabled:(BOOL)a0;
- (unsigned int)USBCurrentLimitInmA;
- (BOOL)resetAccessoryBaseCurrent;
- (int)_ACCPlatformUSBModeForIOAccessoryUSBConnectType:(int)a0;
- (void)_sendNotification:(id)a0;
- (void)_stopAuthTimer;
- (int)getUSBMode;
- (void)removeIOAccessoryChildPort:(id)a0;
- (BOOL)setUSBCurrentLimitBase:(unsigned int)a0;
- (void)addIOAccessoryChildPort:(id)a0;
- (unsigned int)USBChargingVoltageInmV;
- (BOOL)isPowerDuringSleepSupported;
- (int)_IOAccUSBModeTypeForSetUSBMode:(int)a0;
- (int)USBCurrentLimitOffsetInmA;
- (void)_registerForBatteryNotifications;
- (void)_pokeResistorID;
- (void)_handleUSBCurrentLimitNotification;
- (void)_registerForIOAccessoryManagerInterestNotifications;
- (unsigned int)accessoryPowerModeCurrentLimitInmA:(int)a0;
- (void).cxx_destruct;
- (BOOL)setUSBMode:(int)a0;
- (id)initWithIOService:(unsigned int)a0;
- (BOOL)setBatteryPackMode:(BOOL)a0;
- (void)_clearAccessoryInfo;
- (BOOL)isBatteryPackModeEnabled;
- (unsigned int)accessoryChargingCurrentInmA;
- (id)_connectionUUIDsForNotification;
- (void)_processAccessoryInfo;
- (void)dealloc;
- (unsigned int)USBCurrentLimitBaseInmA;
- (void)transportClassTerminated;
- (BOOL)isPowerDuringSleepEnabled;
- (BOOL)setAccessoryUsedCurrent:(unsigned int)a0;
- (int)cableType;
- (void)_handleBatteryPackNotification;
- (BOOL)setAccessoryRequestedCurrent:(unsigned int)a0;
- (void)_handlePowerChangeNotification;
- (unsigned int)sleepPowerCurrentLimitInmA;
- (BOOL)setUSBCurrentOffset:(int)a0;

@end
