@class FigMetalContext;
@protocol MTLComputePipelineState, MTLBuffer;

@interface IntelligentDistortionCorrection_Utilities : NSObject {
    FigMetalContext *_metalContext;
    struct { id<MTLComputePipelineState> lumaCropAndDownscale4to1; id<MTLComputePipelineState> zeroBuffer1; id<MTLComputePipelineState> zeroBuffer16; id<MTLComputePipelineState> warpAndOrUndistortPrimaryAsset2_YCbCr420; id<MTLComputePipelineState> warpAndOrUndistortSecondaryAsset_R8Unorm; id<MTLComputePipelineState> warpAndOrUndistortSecondaryAsset_RG8Unorm; id<MTLComputePipelineState> undistortSingleChannel; id<MTLComputePipelineState> undistortBGRA; id<MTLComputePipelineState> warpLinesAndMeasureDistance; id<MTLComputePipelineState> gatherGatingStatistics; id<MTLComputePipelineState> erodeSegmentationMask; id<MTLComputePipelineState> dilateSegmentationMask; id<MTLComputePipelineState> computeMeshROI; id<MTLComputePipelineState> adjustROI; id<MTLComputePipelineState> fillROICollectionRecord; id<MTLComputePipelineState> fillRoiData; } _kernels;
    struct { id<MTLBuffer> buffer; unsigned long long offset; unsigned long long size; } _sharedMetalBuffer;
    struct { struct { void /* unknown type, empty encoding */ inputToFullImageScalingCoefs; void /* unknown type, empty encoding */ fullImageToSensorImageOffset; void /* unknown type, empty encoding */ sensorImagePosToMeshCellPosScalingFactor; void /* unknown type, empty encoding */ finalImageDims; void /* unknown type, empty encoding */ secondaryToPrimaryCoef; struct { void /* unknown type, empty encoding */ center; float mmFactor; } geometricDistortionCommon; struct { float c0; float c2; float c4; float c6; float c8; float c10; float c12; float c14; } inverseGeometricDistortionPolynomial; struct { float c0; float c2; float c4; float c6; float c8; float c10; float c12; float c14; } forwardGeometricDistortionPolynomial; BOOL doUndistortion; BOOL haveMesh; float aspectRatio; } parameters; unsigned int primaryOutputImageWidth; unsigned int primaryOutputImageHeight; id<MTLBuffer> roi; } _warpAndOrUndistortPrimaryAsset;
}

- (void)releaseResources;
- (id)initWithMetalContext:(id)a0;
- (void).cxx_destruct;
- (void)dealloc;
- (int)setSharedMetalBuffer:(id)a0 offset:(unsigned long long)a1 size:(unsigned long long)a2;
- (int)testGenericObject:(id)a0 withName:(id)a1 classType:(Class)a2 className:(id)a3 cumulativeError:(int *)a4;
- (int)compileShaders:(BOOL)a0;
- (void)buildParameters:(struct { struct { float x0; } x0; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x1; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x2; BOOL x3; BOOL x4; float x5; } *)a0 bundleConfiguration:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a1;
- (int)computeMeshROI:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 invertedMeshTexture:(id)a1 roiTracker:(id)a2;
- (void)computeTextureStrideForBufferAllocation:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; } *)a0;
- (int)determineWorkingBufferRequirements:(struct { unsigned long long x0; } *)a0;
- (int)dilateSegmentationMask:(id)a0 to:(id)a1 radius:(int)a2 commandEncoder:(id)a3;
- (int)erodeSegmentationMask:(id)a0 to:(id)a1 radius:(int)a2 commandEncoder:(id)a3;
- (int)extractBundleConfigurationParameters:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 cameraInfo:(id)a1 tuningParameters:(id)a2 imageInfo:(id)a3;
- (void)extractCameraDictionaryOptions:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 topEntry:(id)a1 cumulativeError:(int *)a2;
- (void)extractClassifierOptions:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 parentEntry:(id)a1 cumulativeError:(int *)a2;
- (void)extractContentPreservingWarpingOptions:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 parentEntry:(id)a1 cumulativeError:(int *)a2;
- (void)extractDistortionOptions:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 parentEntry:(id)a1 cumulativeError:(int *)a2;
- (int)extractFloat:(id)a0 name:(id)a1 value:(float *)a2 mandatory:(BOOL)a3 cumulativeError:(int *)a4;
- (int)extractImageOptions:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 imageInfo:(id)a1 portType:(id *)a2 cumulativeError:(int *)a3;
- (void)extractLineDetectorOptions:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 parentEntry:(id)a1 cumulativeError:(int *)a2;
- (void)extractUint:(id)a0 name:(id)a1 value:(unsigned int *)a2 mandatory:(BOOL)a3 cumulativeError:(int *)a4;
- (int)gatherGatingStatistics:(SEL)a0 area:(id)a1 center:(struct { int x0; int x1; int x2; int x3; int x4; int x5; })a2 radiusFromCenter:(float)a3 sharedMetalBuffer:(id)a4 sharedMetalBufferoffset:(unsigned long long)a5 activePixelCount:(unsigned int *)a6 centerPixelCount:(unsigned int *)a7;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })getTransformFromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 toRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1;
- (int)lumaCropAndDownscale4to1:(id)a0 outputLumaTexture:(id)a1 region:(struct { struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x0; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x1; })a2;
- (void)setBoundingRect:(struct { int x0; int x1; int x2; int x3; int x4; int x5; } *)a0 x0:(int)a1 y0:(int)a2 width:(int)a3 height:(int)a4;
- (int)testArrayObject:(id)a0 withName:(id)a1 cumulativeError:(int *)a2;
- (int)testDataObject:(id)a0 withName:(id)a1 cumulativeError:(int *)a2;
- (int)testDictionaryObject:(id)a0 withName:(id)a1 cumulativeError:(int *)a2;
- (int)testNumberObject:(id)a0 withName:(id)a1 cumulativeError:(int *)a2;
- (int)testStringObject:(id)a0 withName:(id)a1 cumulativeError:(int *)a2;
- (id)textureFromBuffer:(id)a0 bufferOffset:(unsigned long long)a1 textureDescriptor:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; } *)a2;
- (int)undistortBGRATexture:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 inputBGRATexture:(id)a1 intoOutputBGRA:(id)a2 encoder:(id)a3 crop:(struct { int x0; int x1; int x2; int x3; int x4; int x5; } *)a4;
- (int)undistortSingleChannelTexture:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 inputTexture:(id)a1 outputTexture:(id)a2;
- (int)warpAndOrUndistortPrimaryAsset:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 inputImageTexture:(id)a1 inputMeshTexture:(id)a2 outputImageTexture:(id)a3 roiTracker:(id)a4 inputImageMetadataDictionary:(id)a5;
- (int)warpAndOrUndistortSecondaryAsset:(struct { float x0; float x1; float x2; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x3; struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; } x4; BOOL x5; struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; float x4; unsigned int x5; } x6; float x7[6]; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x1; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x2; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x3; } x8; struct { struct { int x0; int x1; int x2; int x3; int x4; int x5; } x0; } x9; struct { int x0; int x1; int x2; int x3; int x4; int x5; } x10; struct { unsigned int x0; float x1; unsigned int x2; unsigned int x3; unsigned int x4; float x5; float x6; float x7; unsigned int x8; unsigned int x9; } x11; struct { float x0; float x1; float x2; float x3; unsigned int x4; unsigned int x5; } x12; BOOL x13; unsigned int x14; struct { float x0[7]; } x15[10]; unsigned int x16; struct { BOOL x0; int x1; float x2; } x17[10]; float x18; float x19; } *)a0 inputImageTexture:(id)a1 inputMeshTexture:(id)a2 outputImageTexture:(id)a3 roiTracker:(id)a4 waitUntilCompleted:(BOOL)a5;
- (int)zeroMetalBuffer:(id)a0 range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 commandEncoder:(id)a2;

@end
